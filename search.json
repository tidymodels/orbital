[{"path":[]},{"path":"https://orbital.tidymodels.org/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://orbital.tidymodels.org/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://orbital.tidymodels.org/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://orbital.tidymodels.org/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://orbital.tidymodels.org/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://orbital.tidymodels.org/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://orbital.tidymodels.org/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://orbital.tidymodels.org/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://orbital.tidymodels.org/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://orbital.tidymodels.org/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://orbital.tidymodels.org/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://orbital.tidymodels.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 orbital authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://orbital.tidymodels.org/articles/databases.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Using Databases","text":"start loading packages creating simple fitted workflow using mtcars. create orbital object.","code":"library(orbital) library(recipes) #> Error in get(paste0(generic, \".\", class), envir = get_method_env()) :  #>   object 'type_sum.accel' not found library(parsnip) library(workflows) rec_spec <- recipe(mpg ~ disp, data = mtcars) |>   step_impute_mean(all_numeric_predictors()) |>   step_normalize(all_numeric_predictors())  lm_spec <- linear_reg()  wf_spec <- workflow(rec_spec, lm_spec) wf_fit <- fit(wf_spec, data = mtcars) orbital_obj <- orbital(wf_fit) orbital_obj"},{"path":"https://orbital.tidymodels.org/articles/databases.html","id":"sql","dir":"Articles","previous_headings":"","what":"SQL","title":"Using Databases","text":"","code":"library(DBI) library(RSQLite)  con_sqlite <- dbConnect(SQLite(), path = \":memory:\") mtcars_sqlite <- copy_to(con_sqlite, mtcars, name = \"mtcars_table\")  predict(orbital_obj, mtcars_sqlite) #> # Source:   SQL [?? x 1] #> # Database: sqlite 3.47.1 [] #>    .pred #>    <dbl> #>  1  23.0 #>  2  23.0 #>  3  25.1 #>  4  19.0 #>  5  14.8 #>  6  20.3 #>  7  14.8 #>  8  23.6 #>  9  23.8 #> 10  22.7 #> # ℹ more rows predict(orbital_obj, mtcars_sqlite) |>   collect() #> # A tibble: 32 × 1 #>    .pred #>    <dbl> #>  1  23.0 #>  2  23.0 #>  3  25.1 #>  4  19.0 #>  5  14.8 #>  6  20.3 #>  7  14.8 #>  8  23.6 #>  9  23.8 #> 10  22.7 #> # ℹ 22 more rows"},{"path":"https://orbital.tidymodels.org/articles/databases.html","id":"spark","dir":"Articles","previous_headings":"","what":"Spark","title":"Using Databases","text":"","code":"library(sparklyr)  con_spark <- spark_connect(master = \"local\") mtcars_spark <- copy_to(con_spark, mtcars, overwrite = TRUE)  predict(orbital_obj, mtcars_spark) #> # Source:   SQL [?? x 1] #> # Database: spark_connection #>    .pred #>    <dbl> #>  1  23.0 #>  2  23.0 #>  3  25.1 #>  4  19.0 #>  5  14.8 #>  6  20.3 #>  7  14.8 #>  8  23.6 #>  9  23.8 #> 10  22.7 #> # ℹ more rows predict(orbital_obj, mtcars_spark) |>   collect() #> # A tibble: 32 × 1 #>    .pred #>    <dbl> #>  1  23.0 #>  2  23.0 #>  3  25.1 #>  4  19.0 #>  5  14.8 #>  6  20.3 #>  7  14.8 #>  8  23.6 #>  9  23.8 #> 10  22.7 #> # ℹ 22 more rows"},{"path":"https://orbital.tidymodels.org/articles/databases.html","id":"duckdb","dir":"Articles","previous_headings":"","what":"duckdb","title":"Using Databases","text":"","code":"library(duckdb)  con_duckdb <- dbConnect(duckdb(dbdir = \":memory:\")) mtcars_duckdb <- dplyr::copy_to(con_duckdb, mtcars)  predict(orbital_obj, mtcars_duckdb) #> # Source:   SQL [?? x 1] #> # Database: DuckDB v1.1.3 [unknown@Linux 6.8.0-1017-azure:R 4.4.2/:memory:] #>    .pred #>    <dbl> #>  1  23.0 #>  2  23.0 #>  3  25.1 #>  4  19.0 #>  5  14.8 #>  6  20.3 #>  7  14.8 #>  8  23.6 #>  9  23.8 #> 10  22.7 #> # ℹ more rows predict(orbital_obj, mtcars_duckdb) |>   collect() #> # A tibble: 32 × 1 #>    .pred #>    <dbl> #>  1  23.0 #>  2  23.0 #>  3  25.1 #>  4  19.0 #>  5  14.8 #>  6  20.3 #>  7  14.8 #>  8  23.6 #>  9  23.8 #> 10  22.7 #> # ℹ 22 more rows"},{"path":"https://orbital.tidymodels.org/articles/databases.html","id":"arrow","dir":"Articles","previous_headings":"","what":"arrow","title":"Using Databases","text":"","code":"library(arrow) mtcars_arrow <- as_arrow_table(mtcars)  predict(orbital_obj, mtcars_arrow) #> Table (query) #> .pred: double (add_checked(20.090625, multiply_checked(divide(cast(subtract_checked(if_else(is_null(disp, {nan_is_null=true}), 230.721875, disp), 230.721875), {to_type=double, allow_int_overflow=false, allow_time_truncate=false, allow_time_overflow=false, allow_decimal_truncate=false, allow_float_truncate=false, allow_invalid_utf8=false}), cast(123.938693831382, {to_type=double, allow_int_overflow=false, allow_time_truncate=false, allow_time_overflow=false, allow_decimal_truncate=false, allow_float_truncate=false, allow_invalid_utf8=false})), -5.10814813429143))) #>  #> See $.data for the source Arrow object predict(orbital_obj, mtcars_arrow) |>   collect() #> # A tibble: 32 × 1 #>    .pred #>    <dbl> #>  1  23.0 #>  2  23.0 #>  3  25.1 #>  4  19.0 #>  5  14.8 #>  6  20.3 #>  7  14.8 #>  8  23.6 #>  9  23.8 #> 10  22.7 #> # ℹ 22 more rows"},{"path":"https://orbital.tidymodels.org/articles/orbital.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to orbital","text":"orbital package allows turn fitted workflow new object, retains information needed perform prediction. predictions identical predictions made using original workflow objects smaller objects fewer dependencies needed.","code":""},{"path":"https://orbital.tidymodels.org/articles/orbital.html","id":"creating-a-fitted-model","dir":"Articles","previous_headings":"","what":"Creating a fitted model","title":"Introduction to orbital","text":"using Ames housing data: won’t data split get point package faster, practice. model two parts. First, create recipe preprocessing, specify parsnip model go along . recipe going using standard linear regression Putting together workflow gives us fitted model.","code":"library(orbital) library(recipes) #> Loading required package: dplyr #> Error in get(paste0(generic, \".\", class), envir = get_method_env()) :  #>   object 'type_sum.accel' not found #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union #>  #> Attaching package: 'recipes' #> The following object is masked from 'package:stats': #>  #>     step library(parsnip) library(workflows) library(modeldata) ames #> # A tibble: 2,930 × 74 #>    MS_SubClass      MS_Zoning Lot_Frontage Lot_Area Street Alley Lot_Shape #>  * <fct>            <fct>            <dbl>    <int> <fct>  <fct> <fct>     #>  1 One_Story_1946_… Resident…          141    31770 Pave   No_A… Slightly… #>  2 One_Story_1946_… Resident…           80    11622 Pave   No_A… Regular   #>  3 One_Story_1946_… Resident…           81    14267 Pave   No_A… Slightly… #>  4 One_Story_1946_… Resident…           93    11160 Pave   No_A… Regular   #>  5 Two_Story_1946_… Resident…           74    13830 Pave   No_A… Slightly… #>  6 Two_Story_1946_… Resident…           78     9978 Pave   No_A… Slightly… #>  7 One_Story_PUD_1… Resident…           41     4920 Pave   No_A… Regular   #>  8 One_Story_PUD_1… Resident…           43     5005 Pave   No_A… Slightly… #>  9 One_Story_PUD_1… Resident…           39     5389 Pave   No_A… Slightly… #> 10 Two_Story_1946_… Resident…           60     7500 Pave   No_A… Regular   #> # ℹ 2,920 more rows #> # ℹ 67 more variables: Land_Contour <fct>, Utilities <fct>, #> #   Lot_Config <fct>, Land_Slope <fct>, Neighborhood <fct>, #> #   Condition_1 <fct>, Condition_2 <fct>, Bldg_Type <fct>, #> #   House_Style <fct>, Overall_Cond <fct>, Year_Built <int>, #> #   Year_Remod_Add <int>, Roof_Style <fct>, Roof_Matl <fct>, #> #   Exterior_1st <fct>, Exterior_2nd <fct>, Mas_Vnr_Type <fct>, … rec_spec <- recipe(Sale_Price ~ ., data = ames) |>   step_impute_median(all_numeric_predictors()) |>   step_unknown(all_nominal_predictors()) |>   step_other(all_nominal_predictors()) |>   step_dummy(all_nominal_predictors()) |>   step_nzv(all_numeric_predictors()) |>   step_normalize(all_numeric_predictors()) |>   step_corr(all_numeric_predictors()) lm_spec <- linear_reg() wf_spec <- workflow(rec_spec, lm_spec) wf_fit <- fit(wf_spec, data = ames) wf_fit #> ══ Workflow [trained] ════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ────────────────────────────────────────────────────────── #> 7 Recipe Steps #>  #> • step_impute_median() #> • step_unknown() #> • step_other() #> • step_dummy() #> • step_nzv() #> • step_normalize() #> • step_corr() #>  #> ── Model ───────────────────────────────────────────────────────────────── #>  #> Call: #> stats::lm(formula = ..y ~ ., data = data) #>  #> Coefficients: #>                                      (Intercept)   #>                                        180796.06   #>                                     Lot_Frontage   #>                                           955.64   #>                                         Lot_Area   #>                                          1516.76   #>                                       Year_Built   #>                                          8074.10   #>                                   Year_Remod_Add   #>                                          5932.22   #>                                     Mas_Vnr_Area   #>                                          6997.31   #>                                     BsmtFin_SF_1   #>                                         -2548.65   #>                                      Bsmt_Unf_SF   #>                                         -3924.57   #>                                    Total_Bsmt_SF   #>                                          9069.96   #>                                     First_Flr_SF   #>                                          6568.67   #>                                    Second_Flr_SF   #>                                         15604.79   #>                                      Gr_Liv_Area   #>                                         19292.62   #>                                   Bsmt_Full_Bath   #>                                          3296.45   #>                                   Bsmt_Half_Bath   #>                                          -533.51   #>                                        Full_Bath   #>                                          2431.15   #>                                        Half_Bath   #>                                          1403.62   #>                                    Bedroom_AbvGr   #>                                         -3345.31   #>                                    TotRms_AbvGrd   #>                                           915.76   #>                                       Fireplaces   #>                                          4709.45   #>                                      Garage_Cars   #>                                          7318.62   #>                                      Garage_Area   #>                                          1681.64   #>                                     Wood_Deck_SF   #>                                          1017.69   #>                                          Mo_Sold   #>  #> ... #> and 150 more lines."},{"path":"https://orbital.tidymodels.org/articles/orbital.html","id":"converting-model","dir":"Articles","previous_headings":"","what":"Converting model","title":"Introduction to orbital","text":"fitted workflow call orbital() function fitted workflow. create orbital object use . One neat things orbital objects require orbital package loaded, compared workflow object needs recipes, parsnip, workflows engine package loaded. also substantially smaller size.","code":"orbital_obj <- orbital(wf_fit) orbital_obj #>  #> ── orbital Object ──────────────────────────────────────────────────────── #> • Lot_Frontage = dplyr::if_else(is.na(Lot_Frontage), 63, Lot_Fronta ... #> • Lot_Area = dplyr::if_else(is.na(Lot_Area), 9436, Lot_Area) #> • Year_Built = dplyr::if_else(is.na(Year_Built), 1973, Year_Built) #> • Year_Remod_Add = dplyr::if_else(is.na(Year_Remod_Add), 1993, Year ... #> • Mas_Vnr_Area = dplyr::if_else(is.na(Mas_Vnr_Area), 0, Mas_Vnr_Are ... #> • BsmtFin_SF_1 = dplyr::if_else(is.na(BsmtFin_SF_1), 3, BsmtFin_SF_ ... #> • Bsmt_Unf_SF = dplyr::if_else(is.na(Bsmt_Unf_SF), 465.5, Bsmt_Unf_ ... #> • Total_Bsmt_SF = dplyr::if_else(is.na(Total_Bsmt_SF), 990, Total_B ... #> • First_Flr_SF = dplyr::if_else(is.na(First_Flr_SF), 1084, First_Fl ... #> • Second_Flr_SF = dplyr::if_else(is.na(Second_Flr_SF), 0, Second_Fl ... #> • Gr_Liv_Area = dplyr::if_else(is.na(Gr_Liv_Area), 1442, Gr_Liv_Are ... #> • Bsmt_Full_Bath = dplyr::if_else(is.na(Bsmt_Full_Bath), 0, Bsmt_Fu ... #> • Bsmt_Half_Bath = dplyr::if_else(is.na(Bsmt_Half_Bath), 0, Bsmt_Ha ... #> • Full_Bath = dplyr::if_else(is.na(Full_Bath), 2, Full_Bath) #> • Half_Bath = dplyr::if_else(is.na(Half_Bath), 0, Half_Bath) #> • Bedroom_AbvGr = dplyr::if_else(is.na(Bedroom_AbvGr), 3, Bedroom_A ... #> • TotRms_AbvGrd = dplyr::if_else(is.na(TotRms_AbvGrd), 6, TotRms_Ab ... #> • Fireplaces = dplyr::if_else(is.na(Fireplaces), 1, Fireplaces) #> • Garage_Cars = dplyr::if_else(is.na(Garage_Cars), 2, Garage_Cars) #> • Garage_Area = dplyr::if_else(is.na(Garage_Area), 480, Garage_Area ... #> • Wood_Deck_SF = dplyr::if_else(is.na(Wood_Deck_SF), 0, Wood_Deck_S ... #> • Mo_Sold = dplyr::if_else(is.na(Mo_Sold), 6, Mo_Sold) #> • Year_Sold = dplyr::if_else(is.na(Year_Sold), 2008, Year_Sold) #> • Longitude = dplyr::if_else(is.na(Longitude), -93.64181, Longitude ... #> • Latitude = dplyr::if_else(is.na(Latitude), 42.03466, Latitude) #> • MS_SubClass = dplyr::if_else(is.na(MS_SubClass), \"unknown\", MS_Su ... #> • MS_Zoning = dplyr::if_else(is.na(MS_Zoning), \"unknown\", MS_Zoning ... #> • Alley = dplyr::if_else(is.na(Alley), \"unknown\", Alley) #> • Lot_Shape = dplyr::if_else(is.na(Lot_Shape), \"unknown\", Lot_Shape ... #> • Land_Contour = dplyr::if_else(is.na(Land_Contour), \"unknown\", Lan ... #> • Lot_Config = dplyr::if_else(is.na(Lot_Config), \"unknown\", Lot_Con ... #> • Neighborhood = dplyr::if_else(is.na(Neighborhood), \"unknown\", Nei ... #> • Condition_1 = dplyr::if_else(is.na(Condition_1), \"unknown\", Condi ... #> • Bldg_Type = dplyr::if_else(is.na(Bldg_Type), \"unknown\", Bldg_Type ... #> • House_Style = dplyr::if_else(is.na(House_Style), \"unknown\", House ... #> • Overall_Cond = dplyr::if_else(is.na(Overall_Cond), \"unknown\", Ove ... #> • Roof_Style = dplyr::if_else(is.na(Roof_Style), \"unknown\", Roof_St ... #> • Exterior_1st = dplyr::if_else(is.na(Exterior_1st), \"unknown\", Ext ... #> • Exterior_2nd = dplyr::if_else(is.na(Exterior_2nd), \"unknown\", Ext ... #> • Mas_Vnr_Type = dplyr::if_else(is.na(Mas_Vnr_Type), \"unknown\", Mas ... #> • Exter_Cond = dplyr::if_else(is.na(Exter_Cond), \"unknown\", Exter_C ... #> • Foundation = dplyr::if_else(is.na(Foundation), \"unknown\", Foundat ... #> • Bsmt_Cond = dplyr::if_else(is.na(Bsmt_Cond), \"unknown\", Bsmt_Cond ... #> • Bsmt_Exposure = dplyr::if_else(is.na(Bsmt_Exposure), \"unknown\", B ... #> • BsmtFin_Type_1 = dplyr::if_else(is.na(BsmtFin_Type_1), \"unknown\", ... #> • BsmtFin_Type_2 = dplyr::if_else(is.na(BsmtFin_Type_2), \"unknown\", ... #> • Heating_QC = dplyr::if_else(is.na(Heating_QC), \"unknown\", Heating ... #> • Central_Air = dplyr::if_else(is.na(Central_Air), \"unknown\", Centr ... #> • Electrical = dplyr::if_else(is.na(Electrical), \"unknown\", Electri ... #> • Functional = dplyr::if_else(is.na(Functional), \"unknown\", Functio ... #> • Garage_Type = dplyr::if_else(is.na(Garage_Type), \"unknown\", Garag ... #> • Garage_Finish = dplyr::if_else(is.na(Garage_Finish), \"unknown\", G ... #> • Garage_Cond = dplyr::if_else(is.na(Garage_Cond), \"unknown\", Garag ... #> • Paved_Drive = dplyr::if_else(is.na(Paved_Drive), \"unknown\", Paved ... #> • Fence = dplyr::if_else(is.na(Fence), \"unknown\", Fence) #> • Sale_Type = dplyr::if_else(is.na(Sale_Type), \"unknown\", Sale_Type ... #> • Sale_Condition = dplyr::if_else(is.na(Sale_Condition), \"unknown\", ... #> • MS_SubClass = dplyr::if_else(is.na(MS_SubClass), NA, dplyr::if_el ... #> • MS_Zoning = dplyr::if_else(is.na(MS_Zoning), NA, dplyr::if_else(M ... #> • Alley = dplyr::if_else(is.na(Alley), NA, dplyr::if_else(Alley %in ... #> • Lot_Shape = dplyr::if_else(is.na(Lot_Shape), NA, dplyr::if_else(L ... #> • Land_Contour = dplyr::if_else(is.na(Land_Contour), NA, dplyr::if_ ... #> • Lot_Config = dplyr::if_else(is.na(Lot_Config), NA, dplyr::if_else ... #> • Neighborhood = dplyr::if_else(is.na(Neighborhood), NA, dplyr::if_ ... #> • Condition_1 = dplyr::if_else(is.na(Condition_1), NA, dplyr::if_el ... #> • Bldg_Type = dplyr::if_else(is.na(Bldg_Type), NA, dplyr::if_else(B ... #> • House_Style = dplyr::if_else(is.na(House_Style), NA, dplyr::if_el ... #> • Overall_Cond = dplyr::if_else(is.na(Overall_Cond), NA, dplyr::if_ ... #> • Roof_Style = dplyr::if_else(is.na(Roof_Style), NA, dplyr::if_else ... #> • Exterior_1st = dplyr::if_else(is.na(Exterior_1st), NA, dplyr::if_ ... #> • Exterior_2nd = dplyr::if_else(is.na(Exterior_2nd), NA, dplyr::if_ ... #> • Mas_Vnr_Type = dplyr::if_else(is.na(Mas_Vnr_Type), NA, dplyr::if_ ... #> • Exter_Cond = dplyr::if_else(is.na(Exter_Cond), NA, dplyr::if_else ... #> • Foundation = dplyr::if_else(is.na(Foundation), NA, dplyr::if_else ... #> • Bsmt_Cond = dplyr::if_else(is.na(Bsmt_Cond), NA, dplyr::if_else(B ... #> • Bsmt_Exposure = dplyr::if_else(is.na(Bsmt_Exposure), NA, dplyr::i ... #> • BsmtFin_Type_1 = dplyr::if_else(is.na(BsmtFin_Type_1), NA, dplyr: ... #> • BsmtFin_Type_2 = dplyr::if_else(is.na(BsmtFin_Type_2), NA, dplyr: ... #> • Heating_QC = dplyr::if_else(is.na(Heating_QC), NA, dplyr::if_else ... #> • Central_Air = dplyr::if_else(is.na(Central_Air), NA, dplyr::if_el ... #> • Electrical = dplyr::if_else(is.na(Electrical), NA, dplyr::if_else ... #> • Functional = dplyr::if_else(is.na(Functional), NA, dplyr::if_else ... #> • Garage_Type = dplyr::if_else(is.na(Garage_Type), NA, dplyr::if_el ... #> • Garage_Finish = dplyr::if_else(is.na(Garage_Finish), NA, dplyr::i ... #> • Garage_Cond = dplyr::if_else(is.na(Garage_Cond), NA, dplyr::if_el ... #> • Paved_Drive = dplyr::if_else(is.na(Paved_Drive), NA, dplyr::if_el ... #> • Fence = dplyr::if_else(is.na(Fence), NA, dplyr::if_else(Fence %in ... #> • Sale_Type = dplyr::if_else(is.na(Sale_Type), NA, dplyr::if_else(S ... #> • Sale_Condition = dplyr::if_else(is.na(Sale_Condition), NA, dplyr: ... #> • MS_SubClass_One_and_Half_Story_Finished_All_Ages = as.numeric(MS_ ... #> • MS_SubClass_Two_Story_1946_and_Newer = as.numeric(MS_SubClass == ... #> • MS_SubClass_One_Story_PUD_1946_and_Newer = as.numeric(MS_SubClass ... #> • MS_SubClass_other = as.numeric(MS_SubClass == \"other\") #> • MS_Zoning_Residential_Medium_Density = as.numeric(MS_Zoning == \"R ... #> • MS_Zoning_other = as.numeric(MS_Zoning == \"other\") #> • Alley_other = as.numeric(Alley == \"other\") #> • Lot_Shape_Slightly_Irregular = as.numeric(Lot_Shape == \"Slightly_ ... #> • Land_Contour_other = as.numeric(Land_Contour == \"other\") #> • Lot_Config_CulDSac = as.numeric(Lot_Config == \"CulDSac\") #> • Lot_Config_Inside = as.numeric(Lot_Config == \"Inside\") #> • Neighborhood_College_Creek = as.numeric(Neighborhood == \"College_ ... #> • Neighborhood_Old_Town = as.numeric(Neighborhood == \"Old_Town\") #> • Neighborhood_Edwards = as.numeric(Neighborhood == \"Edwards\") #> • Neighborhood_Somerset = as.numeric(Neighborhood == \"Somerset\") #> • Neighborhood_Northridge_Heights = as.numeric(Neighborhood == \"Nor ... #> • Neighborhood_Gilbert = as.numeric(Neighborhood == \"Gilbert\") #> • Neighborhood_Sawyer = as.numeric(Neighborhood == \"Sawyer\") #> • Neighborhood_other = as.numeric(Neighborhood == \"other\") #> • Condition_1_Norm = as.numeric(Condition_1 == \"Norm\") #> • Condition_1_other = as.numeric(Condition_1 == \"other\") #> • Bldg_Type_TwnhsE = as.numeric(Bldg_Type == \"TwnhsE\") #> • Bldg_Type_other = as.numeric(Bldg_Type == \"other\") #> • House_Style_One_Story = as.numeric(House_Style == \"One_Story\") #> • House_Style_Two_Story = as.numeric(House_Style == \"Two_Story\") #> • House_Style_other = as.numeric(House_Style == \"other\") #> • Overall_Cond_Above_Average = as.numeric(Overall_Cond == \"Above_Av ... #> • Overall_Cond_Good = as.numeric(Overall_Cond == \"Good\") #> • Overall_Cond_other = as.numeric(Overall_Cond == \"other\") #> • Roof_Style_Hip = as.numeric(Roof_Style == \"Hip\") #> • Exterior_1st_Plywood = as.numeric(Exterior_1st == \"Plywood\") #> • Exterior_1st_Wd.Sdng = as.numeric(Exterior_1st == \"Wd Sdng\") #> • Exterior_1st_other = as.numeric(Exterior_1st == \"other\") #> • Exterior_2nd_MetalSd = as.numeric(Exterior_2nd == \"MetalSd\") #> • Exterior_2nd_Plywood = as.numeric(Exterior_2nd == \"Plywood\") #> • Exterior_2nd_VinylSd = as.numeric(Exterior_2nd == \"VinylSd\") #> • Exterior_2nd_Wd.Sdng = as.numeric(Exterior_2nd == \"Wd Sdng\") #> • Exterior_2nd_other = as.numeric(Exterior_2nd == \"other\") #> • Mas_Vnr_Type_None = as.numeric(Mas_Vnr_Type == \"None\") #> • Mas_Vnr_Type_Stone = as.numeric(Mas_Vnr_Type == \"Stone\") #> • Exter_Cond_Typical = as.numeric(Exter_Cond == \"Typical\") #> • Foundation_CBlock = as.numeric(Foundation == \"CBlock\") #> • Foundation_PConc = as.numeric(Foundation == \"PConc\") #> • Bsmt_Cond_other = as.numeric(Bsmt_Cond == \"other\") #> • Bsmt_Exposure_Gd = as.numeric(Bsmt_Exposure == \"Gd\") #> • Bsmt_Exposure_Mn = as.numeric(Bsmt_Exposure == \"Mn\") #> • Bsmt_Exposure_No = as.numeric(Bsmt_Exposure == \"No\") #> • BsmtFin_Type_1_BLQ = as.numeric(BsmtFin_Type_1 == \"BLQ\") #> • BsmtFin_Type_1_GLQ = as.numeric(BsmtFin_Type_1 == \"GLQ\") #> • BsmtFin_Type_1_LwQ = as.numeric(BsmtFin_Type_1 == \"LwQ\") #> • BsmtFin_Type_1_Rec = as.numeric(BsmtFin_Type_1 == \"Rec\") #> • BsmtFin_Type_1_Unf = as.numeric(BsmtFin_Type_1 == \"Unf\") #> • BsmtFin_Type_2_other = as.numeric(BsmtFin_Type_2 == \"other\") #> • Heating_QC_Good = as.numeric(Heating_QC == \"Good\") #> • Heating_QC_Typical = as.numeric(Heating_QC == \"Typical\") #> • Central_Air_Y = as.numeric(Central_Air == \"Y\") #> • Electrical_SBrkr = as.numeric(Electrical == \"SBrkr\") #> • Functional_other = as.numeric(Functional == \"other\") #> • Garage_Type_BuiltIn = as.numeric(Garage_Type == \"BuiltIn\") #> • Garage_Type_Detchd = as.numeric(Garage_Type == \"Detchd\") #> • Garage_Type_No_Garage = as.numeric(Garage_Type == \"No_Garage\") #> • Garage_Finish_RFn = as.numeric(Garage_Finish == \"RFn\") #> • Garage_Finish_Unf = as.numeric(Garage_Finish == \"Unf\") #> • Garage_Cond_Typical = as.numeric(Garage_Cond == \"Typical\") #> • Paved_Drive_Paved = as.numeric(Paved_Drive == \"Paved\") #> • Fence_No_Fence = as.numeric(Fence == \"No_Fence\") #> • Fence_other = as.numeric(Fence == \"other\") #> • Sale_Type_WD. = as.numeric(Sale_Type == \"WD \") #> • Sale_Type_other = as.numeric(Sale_Type == \"other\") #> • Sale_Condition_Normal = as.numeric(Sale_Condition == \"Normal\") #> • Sale_Condition_Partial = as.numeric(Sale_Condition == \"Partial\") #> • Lot_Frontage = (Lot_Frontage - 57.64778) / 33.49944 #> • Lot_Area = (Lot_Area - 10147.92) / 7880.018 #> • Year_Built = (Year_Built - 1971.356) / 30.24536 #> • Year_Remod_Add = (Year_Remod_Add - 1984.267) / 20.86029 #> • Mas_Vnr_Area = (Mas_Vnr_Area - 101.0969) / 178.6345 #> • BsmtFin_SF_1 = (BsmtFin_SF_1 - 4.177474) / 2.233372 #> • Bsmt_Unf_SF = (Bsmt_Unf_SF - 559.0717) / 439.5406 #> • Total_Bsmt_SF = (Total_Bsmt_SF - 1051.256) / 440.968 #> • First_Flr_SF = (First_Flr_SF - 1159.558) / 391.8909 #> • Second_Flr_SF = (Second_Flr_SF - 335.456) / 428.3957 #> • Gr_Liv_Area = (Gr_Liv_Area - 1499.69) / 505.5089 #> • Bsmt_Full_Bath = (Bsmt_Full_Bath - 0.431058) / 0.524762 #> • Bsmt_Half_Bath = (Bsmt_Half_Bath - 0.06109215) / 0.245175 #> • Full_Bath = (Full_Bath - 1.566553) / 0.5529406 #> • Half_Bath = (Half_Bath - 0.3795222) / 0.5026293 #> • Bedroom_AbvGr = (Bedroom_AbvGr - 2.854266) / 0.8277311 #> • TotRms_AbvGrd = (TotRms_AbvGrd - 6.443003) / 1.572964 #> • Fireplaces = (Fireplaces - 0.5993174) / 0.6479209 #> • Garage_Cars = (Garage_Cars - 1.766212) / 0.7611367 #> • Garage_Area = (Garage_Area - 472.6584) / 215.1872 #> • Wood_Deck_SF = (Wood_Deck_SF - 93.75188) / 126.3616 #> • Mo_Sold = (Mo_Sold - 6.216041) / 2.714492 #> • Year_Sold = (Year_Sold - 2007.79) / 1.316613 #> • Longitude = (Longitude - -93.6429) / 0.02569957 #> • Latitude = (Latitude - 42.03448) / 0.01841007 #> • MS_SubClass_One_and_Half_Story_Finished_All_Ages = (MS_SubClass_O ... #> • MS_SubClass_Two_Story_1946_and_Newer = (MS_SubClass_Two_Story_194 ... #> • MS_SubClass_One_Story_PUD_1946_and_Newer = (MS_SubClass_One_Story ... #> • MS_SubClass_other = (MS_SubClass_other - 0.2720137) / 0.4450728 #> • MS_Zoning_Residential_Medium_Density = (MS_Zoning_Residential_Med ... #> • MS_Zoning_other = (MS_Zoning_other - 0.0665529) / 0.2492886 #> • Alley_other = (Alley_other - 0.06757679) / 0.2510611 #> • Lot_Shape_Slightly_Irregular = (Lot_Shape_Slightly_Irregular - 0. ... #> • Land_Contour_other = (Land_Contour_other - 0.1013652) / 0.3018632 #> • Lot_Config_CulDSac = (Lot_Config_CulDSac - 0.06143345) / 0.240164 ... #> • Lot_Config_Inside = (Lot_Config_Inside - 0.7303754) / 0.4438405 #> • Neighborhood_College_Creek = (Neighborhood_College_Creek - 0.0911 ... #> • Neighborhood_Old_Town = (Neighborhood_Old_Town - 0.08156997) / 0. ... #> • Neighborhood_Edwards = (Neighborhood_Edwards - 0.0662116) / 0.248 ... #> • Neighborhood_Somerset = (Neighborhood_Somerset - 0.06211604) / 0. ... #> • Neighborhood_Northridge_Heights = (Neighborhood_Northridge_Height ... #> • Neighborhood_Gilbert = (Neighborhood_Gilbert - 0.05631399) / 0.23 ... #> • Neighborhood_Sawyer = (Neighborhood_Sawyer - 0.05153584) / 0.2211 ... #> • Neighborhood_other = (Neighborhood_other - 0.3832765) / 0.4862677 #> • Condition_1_Norm = (Condition_1_Norm - 0.8607509) / 0.3462654 #> • Condition_1_other = (Condition_1_other - 0.08327645) / 0.2763468 #> • Bldg_Type_TwnhsE = (Bldg_Type_TwnhsE - 0.07952218) / 0.2705982 #> • Bldg_Type_other = (Bldg_Type_other - 0.09283276) / 0.2902475 #> • House_Style_One_Story = (House_Style_One_Story - 0.5054608) / 0.5 ... #> • House_Style_Two_Story = (House_Style_Two_Story - 0.2979522) / 0.4 ... #> • House_Style_other = (House_Style_other - 0.0894198) / 0.2853974 #> • Overall_Cond_Above_Average = (Overall_Cond_Above_Average - 0.1819 ... #> • Overall_Cond_Good = (Overall_Cond_Good - 0.1331058) / 0.339747 #> • Overall_Cond_other = (Overall_Cond_other - 0.1204778) / 0.325575 #> • Roof_Style_Hip = (Roof_Style_Hip - 0.1880546) / 0.3908225 #> • Exterior_1st_Plywood = (Exterior_1st_Plywood - 0.07542662) / 0.26 ... #> • Exterior_1st_Wd.Sdng = (Exterior_1st_Wd.Sdng - 0.1433447) / 0.350 ... #> • Exterior_1st_other = (Exterior_1st_other - 0.1266212) / 0.3326049 #> • Exterior_2nd_MetalSd = (Exterior_2nd_MetalSd - 0.1525597) / 0.359 ... #> • Exterior_2nd_Plywood = (Exterior_2nd_Plywood - 0.09351536) / 0.29 ... #> • Exterior_2nd_VinylSd = (Exterior_2nd_VinylSd - 0.3464164) / 0.475 ... #> • Exterior_2nd_Wd.Sdng = (Exterior_2nd_Wd.Sdng - 0.1354949) / 0.342 ... #> • Exterior_2nd_other = (Exterior_2nd_other - 0.1334471) / 0.3401154 #> • Mas_Vnr_Type_None = (Mas_Vnr_Type_None - 0.605802) / 0.4887611 #> • Mas_Vnr_Type_Stone = (Mas_Vnr_Type_Stone - 0.08498294) / 0.278903 ... #> • Exter_Cond_Typical = (Exter_Cond_Typical - 0.8699659) / 0.3363984 #> • Foundation_CBlock = (Foundation_CBlock - 0.4245734) / 0.4943625 #> • Foundation_PConc = (Foundation_PConc - 0.447099) / 0.4972785 #> • Bsmt_Cond_other = (Bsmt_Cond_other - 0.1071672) / 0.3093785 #> • Bsmt_Exposure_Gd = (Bsmt_Exposure_Gd - 0.09692833) / 0.2959106 #> • Bsmt_Exposure_Mn = (Bsmt_Exposure_Mn - 0.08156997) / 0.2737552 #> • Bsmt_Exposure_No = (Bsmt_Exposure_No - 0.6505119) / 0.4768897 #> • BsmtFin_Type_1_BLQ = (BsmtFin_Type_1_BLQ - 0.09180887) / 0.288805 ... #> • BsmtFin_Type_1_GLQ = (BsmtFin_Type_1_GLQ - 0.2931741) / 0.4552953 #> • BsmtFin_Type_1_LwQ = (BsmtFin_Type_1_LwQ - 0.05255973) / 0.223191 #> • BsmtFin_Type_1_Rec = (BsmtFin_Type_1_Rec - 0.09829352) / 0.297761 ... #> • BsmtFin_Type_1_Unf = (BsmtFin_Type_1_Unf - 0.2904437) / 0.4540446 #> • BsmtFin_Type_2_other = (BsmtFin_Type_2_other - 0.147099) / 0.3542 ... #> • Heating_QC_Good = (Heating_QC_Good - 0.1624573) / 0.3689328 #> • Heating_QC_Typical = (Heating_QC_Typical - 0.2948805) / 0.4560669 #> • Central_Air_Y = (Central_Air_Y - 0.9331058) / 0.2498813 #> • Electrical_SBrkr = (Electrical_SBrkr - 0.9153584) / 0.2783952 #> • Functional_other = (Functional_other - 0.06894198) / 0.2533987 #> • Garage_Type_BuiltIn = (Garage_Type_BuiltIn - 0.06348123) / 0.2438 ... #> • Garage_Type_Detchd = (Garage_Type_Detchd - 0.2668942) / 0.4424121 #> • Garage_Type_No_Garage = (Garage_Type_No_Garage - 0.05358362) / 0. ... #> • Garage_Finish_RFn = (Garage_Finish_RFn - 0.2771331) / 0.4476592 #> • Garage_Finish_Unf = (Garage_Finish_Unf - 0.4201365) / 0.4936649 #> • Garage_Cond_Typical = (Garage_Cond_Typical - 0.9095563) / 0.28686 ... #> • Paved_Drive_Paved = (Paved_Drive_Paved - 0.9051195) / 0.2930999 #> • Fence_No_Fence = (Fence_No_Fence - 0.8047782) / 0.396439 #> • Fence_other = (Fence_other - 0.08259386) / 0.2753143 #> • Sale_Type_WD. = (Sale_Type_WD. - 0.865529) / 0.3412159 #> • Sale_Type_other = (Sale_Type_other - 0.05290102) / 0.2238741 #> • Sale_Condition_Normal = (Sale_Condition_Normal - 0.8235495) / 0.3 ... #> • Sale_Condition_Partial = (Sale_Condition_Partial - 0.08361775) / ... #> • .pred = 180796.1 + (Lot_Frontage * 955.6351) + (Lot_Area * 1516.7 ... #> ────────────────────────────────────────────────────────────────────────── #> 257 equations in total. object.size(orbital_obj) #> 48992 bytes object.size(wf_fit) #> 9638608 bytes"},{"path":"https://orbital.tidymodels.org/articles/orbital.html","id":"predicting","dir":"Articles","previous_headings":"","what":"Predicting","title":"Introduction to orbital","text":"Predicting orbital object done using predict() function, way done workflows objects. Notice produces results predict() workflow object. orbital objects also allow prediction database objects SQL spark databases. small example using ephemeral -memory RSQLite database.","code":"predict(orbital_obj, ames) #> # A tibble: 2,930 × 1 #>      .pred #>      <dbl> #>  1 241950. #>  2  89436. #>  3 150919. #>  4 258130. #>  5 199195. #>  6 189319. #>  7 211575. #>  8 166227. #>  9 232087. #> 10 188203. #> # ℹ 2,920 more rows predict(wf_fit, ames) #> # A tibble: 2,930 × 1 #>      .pred #>      <dbl> #>  1 241950. #>  2  89436. #>  3 150919. #>  4 258130. #>  5 199195. #>  6 189319. #>  7 211575. #>  8 166227. #>  9 232087. #> 10 188203. #> # ℹ 2,920 more rows library(DBI) library(RSQLite)  con <- dbConnect(SQLite(), path = \":memory:\") ames_sqlite <- copy_to(con, ames)  predict(orbital_obj, ames_sqlite) #> # Source:   SQL [?? x 1] #> # Database: sqlite 3.47.1 [] #>      .pred #>      <dbl> #>  1 241950. #>  2  89436. #>  3 150919. #>  4 258130. #>  5 199195. #>  6 189319. #>  7 211575. #>  8 166227. #>  9 232087. #> 10 188203. #> # ℹ more rows"},{"path":"https://orbital.tidymodels.org/articles/orbital.html","id":"code-generation","dir":"Articles","previous_headings":"","what":"Code Generation","title":"Introduction to orbital","text":"way can predict databases, can also get code needed run query.","code":"orbital_sql(orbital_obj, con) #> <SQL> CASE WHEN ((`Lot_Frontage` IS NULL)) THEN 63.0 WHEN NOT ((`Lot_Frontage` IS NULL)) THEN `Lot_Frontage` END AS Lot_Frontage #> <SQL> CASE WHEN ((`Lot_Area` IS NULL)) THEN 9436.0 WHEN NOT ((`Lot_Area` IS NULL)) THEN `Lot_Area` END AS Lot_Area #> <SQL> CASE WHEN ((`Year_Built` IS NULL)) THEN 1973.0 WHEN NOT ((`Year_Built` IS NULL)) THEN `Year_Built` END AS Year_Built #> <SQL> CASE WHEN ((`Year_Remod_Add` IS NULL)) THEN 1993.0 WHEN NOT ((`Year_Remod_Add` IS NULL)) THEN `Year_Remod_Add` END AS Year_Remod_Add #> <SQL> CASE WHEN ((`Mas_Vnr_Area` IS NULL)) THEN 0.0 WHEN NOT ((`Mas_Vnr_Area` IS NULL)) THEN `Mas_Vnr_Area` END AS Mas_Vnr_Area #> <SQL> CASE WHEN ((`BsmtFin_SF_1` IS NULL)) THEN 3.0 WHEN NOT ((`BsmtFin_SF_1` IS NULL)) THEN `BsmtFin_SF_1` END AS BsmtFin_SF_1 #> <SQL> CASE WHEN ((`Bsmt_Unf_SF` IS NULL)) THEN 465.5 WHEN NOT ((`Bsmt_Unf_SF` IS NULL)) THEN `Bsmt_Unf_SF` END AS Bsmt_Unf_SF #> <SQL> CASE WHEN ((`Total_Bsmt_SF` IS NULL)) THEN 990.0 WHEN NOT ((`Total_Bsmt_SF` IS NULL)) THEN `Total_Bsmt_SF` END AS Total_Bsmt_SF #> <SQL> CASE WHEN ((`First_Flr_SF` IS NULL)) THEN 1084.0 WHEN NOT ((`First_Flr_SF` IS NULL)) THEN `First_Flr_SF` END AS First_Flr_SF #> <SQL> CASE WHEN ((`Second_Flr_SF` IS NULL)) THEN 0.0 WHEN NOT ((`Second_Flr_SF` IS NULL)) THEN `Second_Flr_SF` END AS Second_Flr_SF #> <SQL> CASE WHEN ((`Gr_Liv_Area` IS NULL)) THEN 1442.0 WHEN NOT ((`Gr_Liv_Area` IS NULL)) THEN `Gr_Liv_Area` END AS Gr_Liv_Area #> <SQL> CASE WHEN ((`Bsmt_Full_Bath` IS NULL)) THEN 0.0 WHEN NOT ((`Bsmt_Full_Bath` IS NULL)) THEN `Bsmt_Full_Bath` END AS Bsmt_Full_Bath #> <SQL> CASE WHEN ((`Bsmt_Half_Bath` IS NULL)) THEN 0.0 WHEN NOT ((`Bsmt_Half_Bath` IS NULL)) THEN `Bsmt_Half_Bath` END AS Bsmt_Half_Bath #> <SQL> CASE WHEN ((`Full_Bath` IS NULL)) THEN 2.0 WHEN NOT ((`Full_Bath` IS NULL)) THEN `Full_Bath` END AS Full_Bath #> <SQL> CASE WHEN ((`Half_Bath` IS NULL)) THEN 0.0 WHEN NOT ((`Half_Bath` IS NULL)) THEN `Half_Bath` END AS Half_Bath #> <SQL> CASE WHEN ((`Bedroom_AbvGr` IS NULL)) THEN 3.0 WHEN NOT ((`Bedroom_AbvGr` IS NULL)) THEN `Bedroom_AbvGr` END AS Bedroom_AbvGr #> <SQL> CASE WHEN ((`TotRms_AbvGrd` IS NULL)) THEN 6.0 WHEN NOT ((`TotRms_AbvGrd` IS NULL)) THEN `TotRms_AbvGrd` END AS TotRms_AbvGrd #> <SQL> CASE WHEN ((`Fireplaces` IS NULL)) THEN 1.0 WHEN NOT ((`Fireplaces` IS NULL)) THEN `Fireplaces` END AS Fireplaces #> <SQL> CASE WHEN ((`Garage_Cars` IS NULL)) THEN 2.0 WHEN NOT ((`Garage_Cars` IS NULL)) THEN `Garage_Cars` END AS Garage_Cars #> <SQL> CASE WHEN ((`Garage_Area` IS NULL)) THEN 480.0 WHEN NOT ((`Garage_Area` IS NULL)) THEN `Garage_Area` END AS Garage_Area #> <SQL> CASE WHEN ((`Wood_Deck_SF` IS NULL)) THEN 0.0 WHEN NOT ((`Wood_Deck_SF` IS NULL)) THEN `Wood_Deck_SF` END AS Wood_Deck_SF #> <SQL> CASE WHEN ((`Mo_Sold` IS NULL)) THEN 6.0 WHEN NOT ((`Mo_Sold` IS NULL)) THEN `Mo_Sold` END AS Mo_Sold #> <SQL> CASE WHEN ((`Year_Sold` IS NULL)) THEN 2008.0 WHEN NOT ((`Year_Sold` IS NULL)) THEN `Year_Sold` END AS Year_Sold #> <SQL> CASE WHEN ((`Longitude` IS NULL)) THEN (-93.641806) WHEN NOT ((`Longitude` IS NULL)) THEN `Longitude` END AS Longitude #> <SQL> CASE WHEN ((`Latitude` IS NULL)) THEN 42.0346625 WHEN NOT ((`Latitude` IS NULL)) THEN `Latitude` END AS Latitude #> <SQL> CASE WHEN ((`MS_SubClass` IS NULL)) THEN 'unknown' WHEN NOT ((`MS_SubClass` IS NULL)) THEN `MS_SubClass` END AS MS_SubClass #> <SQL> CASE WHEN ((`MS_Zoning` IS NULL)) THEN 'unknown' WHEN NOT ((`MS_Zoning` IS NULL)) THEN `MS_Zoning` END AS MS_Zoning #> <SQL> CASE WHEN ((`Alley` IS NULL)) THEN 'unknown' WHEN NOT ((`Alley` IS NULL)) THEN `Alley` END AS Alley #> <SQL> CASE WHEN ((`Lot_Shape` IS NULL)) THEN 'unknown' WHEN NOT ((`Lot_Shape` IS NULL)) THEN `Lot_Shape` END AS Lot_Shape #> <SQL> CASE WHEN ((`Land_Contour` IS NULL)) THEN 'unknown' WHEN NOT ((`Land_Contour` IS NULL)) THEN `Land_Contour` END AS Land_Contour #> <SQL> CASE WHEN ((`Lot_Config` IS NULL)) THEN 'unknown' WHEN NOT ((`Lot_Config` IS NULL)) THEN `Lot_Config` END AS Lot_Config #> <SQL> CASE WHEN ((`Neighborhood` IS NULL)) THEN 'unknown' WHEN NOT ((`Neighborhood` IS NULL)) THEN `Neighborhood` END AS Neighborhood #> <SQL> CASE WHEN ((`Condition_1` IS NULL)) THEN 'unknown' WHEN NOT ((`Condition_1` IS NULL)) THEN `Condition_1` END AS Condition_1 #> <SQL> CASE WHEN ((`Bldg_Type` IS NULL)) THEN 'unknown' WHEN NOT ((`Bldg_Type` IS NULL)) THEN `Bldg_Type` END AS Bldg_Type #> <SQL> CASE WHEN ((`House_Style` IS NULL)) THEN 'unknown' WHEN NOT ((`House_Style` IS NULL)) THEN `House_Style` END AS House_Style #> <SQL> CASE WHEN ((`Overall_Cond` IS NULL)) THEN 'unknown' WHEN NOT ((`Overall_Cond` IS NULL)) THEN `Overall_Cond` END AS Overall_Cond #> <SQL> CASE WHEN ((`Roof_Style` IS NULL)) THEN 'unknown' WHEN NOT ((`Roof_Style` IS NULL)) THEN `Roof_Style` END AS Roof_Style #> <SQL> CASE WHEN ((`Exterior_1st` IS NULL)) THEN 'unknown' WHEN NOT ((`Exterior_1st` IS NULL)) THEN `Exterior_1st` END AS Exterior_1st #> <SQL> CASE WHEN ((`Exterior_2nd` IS NULL)) THEN 'unknown' WHEN NOT ((`Exterior_2nd` IS NULL)) THEN `Exterior_2nd` END AS Exterior_2nd #> <SQL> CASE WHEN ((`Mas_Vnr_Type` IS NULL)) THEN 'unknown' WHEN NOT ((`Mas_Vnr_Type` IS NULL)) THEN `Mas_Vnr_Type` END AS Mas_Vnr_Type #> <SQL> CASE WHEN ((`Exter_Cond` IS NULL)) THEN 'unknown' WHEN NOT ((`Exter_Cond` IS NULL)) THEN `Exter_Cond` END AS Exter_Cond #> <SQL> CASE WHEN ((`Foundation` IS NULL)) THEN 'unknown' WHEN NOT ((`Foundation` IS NULL)) THEN `Foundation` END AS Foundation #> <SQL> CASE WHEN ((`Bsmt_Cond` IS NULL)) THEN 'unknown' WHEN NOT ((`Bsmt_Cond` IS NULL)) THEN `Bsmt_Cond` END AS Bsmt_Cond #> <SQL> CASE WHEN ((`Bsmt_Exposure` IS NULL)) THEN 'unknown' WHEN NOT ((`Bsmt_Exposure` IS NULL)) THEN `Bsmt_Exposure` END AS Bsmt_Exposure #> <SQL> CASE WHEN ((`BsmtFin_Type_1` IS NULL)) THEN 'unknown' WHEN NOT ((`BsmtFin_Type_1` IS NULL)) THEN `BsmtFin_Type_1` END AS BsmtFin_Type_1 #> <SQL> CASE WHEN ((`BsmtFin_Type_2` IS NULL)) THEN 'unknown' WHEN NOT ((`BsmtFin_Type_2` IS NULL)) THEN `BsmtFin_Type_2` END AS BsmtFin_Type_2 #> <SQL> CASE WHEN ((`Heating_QC` IS NULL)) THEN 'unknown' WHEN NOT ((`Heating_QC` IS NULL)) THEN `Heating_QC` END AS Heating_QC #> <SQL> CASE WHEN ((`Central_Air` IS NULL)) THEN 'unknown' WHEN NOT ((`Central_Air` IS NULL)) THEN `Central_Air` END AS Central_Air #> <SQL> CASE WHEN ((`Electrical` IS NULL)) THEN 'unknown' WHEN NOT ((`Electrical` IS NULL)) THEN `Electrical` END AS Electrical #> <SQL> CASE WHEN ((`Functional` IS NULL)) THEN 'unknown' WHEN NOT ((`Functional` IS NULL)) THEN `Functional` END AS Functional #> <SQL> CASE WHEN ((`Garage_Type` IS NULL)) THEN 'unknown' WHEN NOT ((`Garage_Type` IS NULL)) THEN `Garage_Type` END AS Garage_Type #> <SQL> CASE WHEN ((`Garage_Finish` IS NULL)) THEN 'unknown' WHEN NOT ((`Garage_Finish` IS NULL)) THEN `Garage_Finish` END AS Garage_Finish #> <SQL> CASE WHEN ((`Garage_Cond` IS NULL)) THEN 'unknown' WHEN NOT ((`Garage_Cond` IS NULL)) THEN `Garage_Cond` END AS Garage_Cond #> <SQL> CASE WHEN ((`Paved_Drive` IS NULL)) THEN 'unknown' WHEN NOT ((`Paved_Drive` IS NULL)) THEN `Paved_Drive` END AS Paved_Drive #> <SQL> CASE WHEN ((`Fence` IS NULL)) THEN 'unknown' WHEN NOT ((`Fence` IS NULL)) THEN `Fence` END AS Fence #> <SQL> CASE WHEN ((`Sale_Type` IS NULL)) THEN 'unknown' WHEN NOT ((`Sale_Type` IS NULL)) THEN `Sale_Type` END AS Sale_Type #> <SQL> CASE WHEN ((`Sale_Condition` IS NULL)) THEN 'unknown' WHEN NOT ((`Sale_Condition` IS NULL)) THEN `Sale_Condition` END AS Sale_Condition #> <SQL> CASE WHEN ((`MS_SubClass` IS NULL)) THEN NULL WHEN NOT ((`MS_SubClass` IS NULL)) THEN (CASE WHEN (`MS_SubClass` IN ('One_Story_1946_and_Newer_All_Styles', 'One_and_Half_Story_Finished_All_Ages', 'Two_Story_1946_and_Newer', 'One_Story_PUD_1946_and_Newer')) THEN `MS_SubClass` WHEN NOT (`MS_SubClass` IN ('One_Story_1946_and_Newer_All_Styles', 'One_and_Half_Story_Finished_All_Ages', 'Two_Story_1946_and_Newer', 'One_Story_PUD_1946_and_Newer')) THEN 'other' END) END AS MS_SubClass #> <SQL> CASE WHEN ((`MS_Zoning` IS NULL)) THEN NULL WHEN NOT ((`MS_Zoning` IS NULL)) THEN (CASE WHEN (`MS_Zoning` IN ('Residential_Low_Density', 'Residential_Medium_Density')) THEN `MS_Zoning` WHEN NOT (`MS_Zoning` IN ('Residential_Low_Density', 'Residential_Medium_Density')) THEN 'other' END) END AS MS_Zoning #> <SQL> CASE WHEN ((`Alley` IS NULL)) THEN NULL WHEN NOT ((`Alley` IS NULL)) THEN (CASE WHEN (`Alley` IN ('No_Alley_Access')) THEN `Alley` WHEN NOT (`Alley` IN ('No_Alley_Access')) THEN 'other' END) END AS Alley #> <SQL> CASE WHEN ((`Lot_Shape` IS NULL)) THEN NULL WHEN NOT ((`Lot_Shape` IS NULL)) THEN (CASE WHEN (`Lot_Shape` IN ('Regular', 'Slightly_Irregular')) THEN `Lot_Shape` WHEN NOT (`Lot_Shape` IN ('Regular', 'Slightly_Irregular')) THEN 'other' END) END AS Lot_Shape #> <SQL> CASE WHEN ((`Land_Contour` IS NULL)) THEN NULL WHEN NOT ((`Land_Contour` IS NULL)) THEN (CASE WHEN (`Land_Contour` IN ('Lvl')) THEN `Land_Contour` WHEN NOT (`Land_Contour` IN ('Lvl')) THEN 'other' END) END AS Land_Contour #> <SQL> CASE WHEN ((`Lot_Config` IS NULL)) THEN NULL WHEN NOT ((`Lot_Config` IS NULL)) THEN (CASE WHEN (`Lot_Config` IN ('Corner', 'CulDSac', 'Inside')) THEN `Lot_Config` WHEN NOT (`Lot_Config` IN ('Corner', 'CulDSac', 'Inside')) THEN 'other' END) END AS Lot_Config #> <SQL> CASE WHEN ((`Neighborhood` IS NULL)) THEN NULL WHEN NOT ((`Neighborhood` IS NULL)) THEN (CASE WHEN (`Neighborhood` IN ('North_Ames', 'College_Creek', 'Old_Town', 'Edwards', 'Somerset', 'Northridge_Heights', 'Gilbert', 'Sawyer')) THEN `Neighborhood` WHEN NOT (`Neighborhood` IN ('North_Ames', 'College_Creek', 'Old_Town', 'Edwards', 'Somerset', 'Northridge_Heights', 'Gilbert', 'Sawyer')) THEN 'other' END) END AS Neighborhood #> <SQL> CASE WHEN ((`Condition_1` IS NULL)) THEN NULL WHEN NOT ((`Condition_1` IS NULL)) THEN (CASE WHEN (`Condition_1` IN ('Feedr', 'Norm')) THEN `Condition_1` WHEN NOT (`Condition_1` IN ('Feedr', 'Norm')) THEN 'other' END) END AS Condition_1 #> <SQL> CASE WHEN ((`Bldg_Type` IS NULL)) THEN NULL WHEN NOT ((`Bldg_Type` IS NULL)) THEN (CASE WHEN (`Bldg_Type` IN ('OneFam', 'TwnhsE')) THEN `Bldg_Type` WHEN NOT (`Bldg_Type` IN ('OneFam', 'TwnhsE')) THEN 'other' END) END AS Bldg_Type #> <SQL> CASE WHEN ((`House_Style` IS NULL)) THEN NULL WHEN NOT ((`House_Style` IS NULL)) THEN (CASE WHEN (`House_Style` IN ('One_and_Half_Fin', 'One_Story', 'Two_Story')) THEN `House_Style` WHEN NOT (`House_Style` IN ('One_and_Half_Fin', 'One_Story', 'Two_Story')) THEN 'other' END) END AS House_Style #> <SQL> CASE WHEN ((`Overall_Cond` IS NULL)) THEN NULL WHEN NOT ((`Overall_Cond` IS NULL)) THEN (CASE WHEN (`Overall_Cond` IN ('Average', 'Above_Average', 'Good')) THEN `Overall_Cond` WHEN NOT (`Overall_Cond` IN ('Average', 'Above_Average', 'Good')) THEN 'other' END) END AS Overall_Cond #> <SQL> CASE WHEN ((`Roof_Style` IS NULL)) THEN NULL WHEN NOT ((`Roof_Style` IS NULL)) THEN (CASE WHEN (`Roof_Style` IN ('Gable', 'Hip')) THEN `Roof_Style` WHEN NOT (`Roof_Style` IN ('Gable', 'Hip')) THEN 'other' END) END AS Roof_Style #> <SQL> CASE WHEN ((`Exterior_1st` IS NULL)) THEN NULL WHEN NOT ((`Exterior_1st` IS NULL)) THEN (CASE WHEN (`Exterior_1st` IN ('HdBoard', 'MetalSd', 'Plywood', 'VinylSd', 'Wd Sdng')) THEN `Exterior_1st` WHEN NOT (`Exterior_1st` IN ('HdBoard', 'MetalSd', 'Plywood', 'VinylSd', 'Wd Sdng')) THEN 'other' END) END AS Exterior_1st #> <SQL> CASE WHEN ((`Exterior_2nd` IS NULL)) THEN NULL WHEN NOT ((`Exterior_2nd` IS NULL)) THEN (CASE WHEN (`Exterior_2nd` IN ('HdBoard', 'MetalSd', 'Plywood', 'VinylSd', 'Wd Sdng')) THEN `Exterior_2nd` WHEN NOT (`Exterior_2nd` IN ('HdBoard', 'MetalSd', 'Plywood', 'VinylSd', 'Wd Sdng')) THEN 'other' END) END AS Exterior_2nd #> <SQL> CASE WHEN ((`Mas_Vnr_Type` IS NULL)) THEN NULL WHEN NOT ((`Mas_Vnr_Type` IS NULL)) THEN (CASE WHEN (`Mas_Vnr_Type` IN ('BrkFace', 'None', 'Stone')) THEN `Mas_Vnr_Type` WHEN NOT (`Mas_Vnr_Type` IN ('BrkFace', 'None', 'Stone')) THEN 'other' END) END AS Mas_Vnr_Type #> <SQL> CASE WHEN ((`Exter_Cond` IS NULL)) THEN NULL WHEN NOT ((`Exter_Cond` IS NULL)) THEN (CASE WHEN (`Exter_Cond` IN ('Good', 'Typical')) THEN `Exter_Cond` WHEN NOT (`Exter_Cond` IN ('Good', 'Typical')) THEN 'other' END) END AS Exter_Cond #> <SQL> CASE WHEN ((`Foundation` IS NULL)) THEN NULL WHEN NOT ((`Foundation` IS NULL)) THEN (CASE WHEN (`Foundation` IN ('BrkTil', 'CBlock', 'PConc')) THEN `Foundation` WHEN NOT (`Foundation` IN ('BrkTil', 'CBlock', 'PConc')) THEN 'other' END) END AS Foundation #> <SQL> CASE WHEN ((`Bsmt_Cond` IS NULL)) THEN NULL WHEN NOT ((`Bsmt_Cond` IS NULL)) THEN (CASE WHEN (`Bsmt_Cond` IN ('Typical')) THEN `Bsmt_Cond` WHEN NOT (`Bsmt_Cond` IN ('Typical')) THEN 'other' END) END AS Bsmt_Cond #> <SQL> CASE WHEN ((`Bsmt_Exposure` IS NULL)) THEN NULL WHEN NOT ((`Bsmt_Exposure` IS NULL)) THEN (CASE WHEN (`Bsmt_Exposure` IN ('Av', 'Gd', 'Mn', 'No')) THEN `Bsmt_Exposure` WHEN NOT (`Bsmt_Exposure` IN ('Av', 'Gd', 'Mn', 'No')) THEN 'other' END) END AS Bsmt_Exposure #> <SQL> CASE WHEN ((`BsmtFin_Type_1` IS NULL)) THEN NULL WHEN NOT ((`BsmtFin_Type_1` IS NULL)) THEN (CASE WHEN (`BsmtFin_Type_1` IN ('ALQ', 'BLQ', 'GLQ', 'LwQ', 'Rec', 'Unf')) THEN `BsmtFin_Type_1` WHEN NOT (`BsmtFin_Type_1` IN ('ALQ', 'BLQ', 'GLQ', 'LwQ', 'Rec', 'Unf')) THEN 'other' END) END AS BsmtFin_Type_1 #> <SQL> CASE WHEN ((`BsmtFin_Type_2` IS NULL)) THEN NULL WHEN NOT ((`BsmtFin_Type_2` IS NULL)) THEN (CASE WHEN (`BsmtFin_Type_2` IN ('Unf')) THEN `BsmtFin_Type_2` WHEN NOT (`BsmtFin_Type_2` IN ('Unf')) THEN 'other' END) END AS BsmtFin_Type_2 #> <SQL> CASE WHEN ((`Heating_QC` IS NULL)) THEN NULL WHEN NOT ((`Heating_QC` IS NULL)) THEN (CASE WHEN (`Heating_QC` IN ('Excellent', 'Good', 'Typical')) THEN `Heating_QC` WHEN NOT (`Heating_QC` IN ('Excellent', 'Good', 'Typical')) THEN 'other' END) END AS Heating_QC #> <SQL> CASE WHEN ((`Central_Air` IS NULL)) THEN NULL WHEN NOT ((`Central_Air` IS NULL)) THEN (CASE WHEN (`Central_Air` IN ('N', 'Y')) THEN `Central_Air` WHEN NOT (`Central_Air` IN ('N', 'Y')) THEN 'other' END) END AS Central_Air #> <SQL> CASE WHEN ((`Electrical` IS NULL)) THEN NULL WHEN NOT ((`Electrical` IS NULL)) THEN (CASE WHEN (`Electrical` IN ('FuseA', 'SBrkr')) THEN `Electrical` WHEN NOT (`Electrical` IN ('FuseA', 'SBrkr')) THEN 'other' END) END AS Electrical #> <SQL> CASE WHEN ((`Functional` IS NULL)) THEN NULL WHEN NOT ((`Functional` IS NULL)) THEN (CASE WHEN (`Functional` IN ('Typ')) THEN `Functional` WHEN NOT (`Functional` IN ('Typ')) THEN 'other' END) END AS Functional #> <SQL> CASE WHEN ((`Garage_Type` IS NULL)) THEN NULL WHEN NOT ((`Garage_Type` IS NULL)) THEN (CASE WHEN (`Garage_Type` IN ('Attchd', 'BuiltIn', 'Detchd', 'No_Garage')) THEN `Garage_Type` WHEN NOT (`Garage_Type` IN ('Attchd', 'BuiltIn', 'Detchd', 'No_Garage')) THEN 'other' END) END AS Garage_Type #> <SQL> CASE WHEN ((`Garage_Finish` IS NULL)) THEN NULL WHEN NOT ((`Garage_Finish` IS NULL)) THEN (CASE WHEN (`Garage_Finish` IN ('Fin', 'No_Garage', 'RFn', 'Unf')) THEN `Garage_Finish` WHEN NOT (`Garage_Finish` IN ('Fin', 'No_Garage', 'RFn', 'Unf')) THEN 'other' END) END AS Garage_Finish #> <SQL> CASE WHEN ((`Garage_Cond` IS NULL)) THEN NULL WHEN NOT ((`Garage_Cond` IS NULL)) THEN (CASE WHEN (`Garage_Cond` IN ('No_Garage', 'Typical')) THEN `Garage_Cond` WHEN NOT (`Garage_Cond` IN ('No_Garage', 'Typical')) THEN 'other' END) END AS Garage_Cond #> <SQL> CASE WHEN ((`Paved_Drive` IS NULL)) THEN NULL WHEN NOT ((`Paved_Drive` IS NULL)) THEN (CASE WHEN (`Paved_Drive` IN ('Dirt_Gravel', 'Paved')) THEN `Paved_Drive` WHEN NOT (`Paved_Drive` IN ('Dirt_Gravel', 'Paved')) THEN 'other' END) END AS Paved_Drive #> <SQL> CASE WHEN ((`Fence` IS NULL)) THEN NULL WHEN NOT ((`Fence` IS NULL)) THEN (CASE WHEN (`Fence` IN ('Minimum_Privacy', 'No_Fence')) THEN `Fence` WHEN NOT (`Fence` IN ('Minimum_Privacy', 'No_Fence')) THEN 'other' END) END AS Fence #> <SQL> CASE WHEN ((`Sale_Type` IS NULL)) THEN NULL WHEN NOT ((`Sale_Type` IS NULL)) THEN (CASE WHEN (`Sale_Type` IN ('New', 'WD ')) THEN `Sale_Type` WHEN NOT (`Sale_Type` IN ('New', 'WD ')) THEN 'other' END) END AS Sale_Type #> <SQL> CASE WHEN ((`Sale_Condition` IS NULL)) THEN NULL WHEN NOT ((`Sale_Condition` IS NULL)) THEN (CASE WHEN (`Sale_Condition` IN ('Abnorml', 'Normal', 'Partial')) THEN `Sale_Condition` WHEN NOT (`Sale_Condition` IN ('Abnorml', 'Normal', 'Partial')) THEN 'other' END) END AS Sale_Condition #> <SQL> CAST(`MS_SubClass` = 'One_and_Half_Story_Finished_All_Ages' AS REAL) AS MS_SubClass_One_and_Half_Story_Finished_All_Ages #> <SQL> CAST(`MS_SubClass` = 'Two_Story_1946_and_Newer' AS REAL) AS MS_SubClass_Two_Story_1946_and_Newer #> <SQL> CAST(`MS_SubClass` = 'One_Story_PUD_1946_and_Newer' AS REAL) AS MS_SubClass_One_Story_PUD_1946_and_Newer #> <SQL> CAST(`MS_SubClass` = 'other' AS REAL) AS MS_SubClass_other #> <SQL> CAST(`MS_Zoning` = 'Residential_Medium_Density' AS REAL) AS MS_Zoning_Residential_Medium_Density #> <SQL> CAST(`MS_Zoning` = 'other' AS REAL) AS MS_Zoning_other #> <SQL> CAST(`Alley` = 'other' AS REAL) AS Alley_other #> <SQL> CAST(`Lot_Shape` = 'Slightly_Irregular' AS REAL) AS Lot_Shape_Slightly_Irregular #> <SQL> CAST(`Land_Contour` = 'other' AS REAL) AS Land_Contour_other #> <SQL> CAST(`Lot_Config` = 'CulDSac' AS REAL) AS Lot_Config_CulDSac #> <SQL> CAST(`Lot_Config` = 'Inside' AS REAL) AS Lot_Config_Inside #> <SQL> CAST(`Neighborhood` = 'College_Creek' AS REAL) AS Neighborhood_College_Creek #> <SQL> CAST(`Neighborhood` = 'Old_Town' AS REAL) AS Neighborhood_Old_Town #> <SQL> CAST(`Neighborhood` = 'Edwards' AS REAL) AS Neighborhood_Edwards #> <SQL> CAST(`Neighborhood` = 'Somerset' AS REAL) AS Neighborhood_Somerset #> <SQL> CAST(`Neighborhood` = 'Northridge_Heights' AS REAL) AS Neighborhood_Northridge_Heights #> <SQL> CAST(`Neighborhood` = 'Gilbert' AS REAL) AS Neighborhood_Gilbert #> <SQL> CAST(`Neighborhood` = 'Sawyer' AS REAL) AS Neighborhood_Sawyer #> <SQL> CAST(`Neighborhood` = 'other' AS REAL) AS Neighborhood_other #> <SQL> CAST(`Condition_1` = 'Norm' AS REAL) AS Condition_1_Norm #> <SQL> CAST(`Condition_1` = 'other' AS REAL) AS Condition_1_other #> <SQL> CAST(`Bldg_Type` = 'TwnhsE' AS REAL) AS Bldg_Type_TwnhsE #> <SQL> CAST(`Bldg_Type` = 'other' AS REAL) AS Bldg_Type_other #> <SQL> CAST(`House_Style` = 'One_Story' AS REAL) AS House_Style_One_Story #> <SQL> CAST(`House_Style` = 'Two_Story' AS REAL) AS House_Style_Two_Story #> <SQL> CAST(`House_Style` = 'other' AS REAL) AS House_Style_other #> <SQL> CAST(`Overall_Cond` = 'Above_Average' AS REAL) AS Overall_Cond_Above_Average #> <SQL> CAST(`Overall_Cond` = 'Good' AS REAL) AS Overall_Cond_Good #> <SQL> CAST(`Overall_Cond` = 'other' AS REAL) AS Overall_Cond_other #> <SQL> CAST(`Roof_Style` = 'Hip' AS REAL) AS Roof_Style_Hip #> <SQL> CAST(`Exterior_1st` = 'Plywood' AS REAL) AS Exterior_1st_Plywood #> <SQL> CAST(`Exterior_1st` = 'Wd Sdng' AS REAL) AS Exterior_1st_Wd.Sdng #> <SQL> CAST(`Exterior_1st` = 'other' AS REAL) AS Exterior_1st_other #> <SQL> CAST(`Exterior_2nd` = 'MetalSd' AS REAL) AS Exterior_2nd_MetalSd #> <SQL> CAST(`Exterior_2nd` = 'Plywood' AS REAL) AS Exterior_2nd_Plywood #> <SQL> CAST(`Exterior_2nd` = 'VinylSd' AS REAL) AS Exterior_2nd_VinylSd #> <SQL> CAST(`Exterior_2nd` = 'Wd Sdng' AS REAL) AS Exterior_2nd_Wd.Sdng #> <SQL> CAST(`Exterior_2nd` = 'other' AS REAL) AS Exterior_2nd_other #> <SQL> CAST(`Mas_Vnr_Type` = 'None' AS REAL) AS Mas_Vnr_Type_None #> <SQL> CAST(`Mas_Vnr_Type` = 'Stone' AS REAL) AS Mas_Vnr_Type_Stone #> <SQL> CAST(`Exter_Cond` = 'Typical' AS REAL) AS Exter_Cond_Typical #> <SQL> CAST(`Foundation` = 'CBlock' AS REAL) AS Foundation_CBlock #> <SQL> CAST(`Foundation` = 'PConc' AS REAL) AS Foundation_PConc #> <SQL> CAST(`Bsmt_Cond` = 'other' AS REAL) AS Bsmt_Cond_other #> <SQL> CAST(`Bsmt_Exposure` = 'Gd' AS REAL) AS Bsmt_Exposure_Gd #> <SQL> CAST(`Bsmt_Exposure` = 'Mn' AS REAL) AS Bsmt_Exposure_Mn #> <SQL> CAST(`Bsmt_Exposure` = 'No' AS REAL) AS Bsmt_Exposure_No #> <SQL> CAST(`BsmtFin_Type_1` = 'BLQ' AS REAL) AS BsmtFin_Type_1_BLQ #> <SQL> CAST(`BsmtFin_Type_1` = 'GLQ' AS REAL) AS BsmtFin_Type_1_GLQ #> <SQL> CAST(`BsmtFin_Type_1` = 'LwQ' AS REAL) AS BsmtFin_Type_1_LwQ #> <SQL> CAST(`BsmtFin_Type_1` = 'Rec' AS REAL) AS BsmtFin_Type_1_Rec #> <SQL> CAST(`BsmtFin_Type_1` = 'Unf' AS REAL) AS BsmtFin_Type_1_Unf #> <SQL> CAST(`BsmtFin_Type_2` = 'other' AS REAL) AS BsmtFin_Type_2_other #> <SQL> CAST(`Heating_QC` = 'Good' AS REAL) AS Heating_QC_Good #> <SQL> CAST(`Heating_QC` = 'Typical' AS REAL) AS Heating_QC_Typical #> <SQL> CAST(`Central_Air` = 'Y' AS REAL) AS Central_Air_Y #> <SQL> CAST(`Electrical` = 'SBrkr' AS REAL) AS Electrical_SBrkr #> <SQL> CAST(`Functional` = 'other' AS REAL) AS Functional_other #> <SQL> CAST(`Garage_Type` = 'BuiltIn' AS REAL) AS Garage_Type_BuiltIn #> <SQL> CAST(`Garage_Type` = 'Detchd' AS REAL) AS Garage_Type_Detchd #> <SQL> CAST(`Garage_Type` = 'No_Garage' AS REAL) AS Garage_Type_No_Garage #> <SQL> CAST(`Garage_Finish` = 'RFn' AS REAL) AS Garage_Finish_RFn #> <SQL> CAST(`Garage_Finish` = 'Unf' AS REAL) AS Garage_Finish_Unf #> <SQL> CAST(`Garage_Cond` = 'Typical' AS REAL) AS Garage_Cond_Typical #> <SQL> CAST(`Paved_Drive` = 'Paved' AS REAL) AS Paved_Drive_Paved #> <SQL> CAST(`Fence` = 'No_Fence' AS REAL) AS Fence_No_Fence #> <SQL> CAST(`Fence` = 'other' AS REAL) AS Fence_other #> <SQL> CAST(`Sale_Type` = 'WD ' AS REAL) AS Sale_Type_WD. #> <SQL> CAST(`Sale_Type` = 'other' AS REAL) AS Sale_Type_other #> <SQL> CAST(`Sale_Condition` = 'Normal' AS REAL) AS Sale_Condition_Normal #> <SQL> CAST(`Sale_Condition` = 'Partial' AS REAL) AS Sale_Condition_Partial #> <SQL> (`Lot_Frontage` - 57.6477815699659) / 33.4994407936297 AS Lot_Frontage #> <SQL> (`Lot_Area` - 10147.9218430034) / 7880.01775943909 AS Lot_Area #> <SQL> (`Year_Built` - 1971.35631399317) / 30.2453606293747 AS Year_Built #> <SQL> (`Year_Remod_Add` - 1984.26655290102) / 20.8602858768493 AS Year_Remod_Add #> <SQL> (`Mas_Vnr_Area` - 101.096928327645) / 178.634544825758 AS Mas_Vnr_Area #> <SQL> (`BsmtFin_SF_1` - 4.17747440273038) / 2.23337248339064 AS BsmtFin_SF_1 #> <SQL> (`Bsmt_Unf_SF` - 559.071672354949) / 439.540571056778 AS Bsmt_Unf_SF #> <SQL> (`Total_Bsmt_SF` - 1051.25563139932) / 440.968017663732 AS Total_Bsmt_SF #> <SQL> (`First_Flr_SF` - 1159.55767918089) / 391.890885253492 AS First_Flr_SF #> <SQL> (`Second_Flr_SF` - 335.455972696246) / 428.395715008826 AS Second_Flr_SF #> <SQL> (`Gr_Liv_Area` - 1499.69044368601) / 505.508887472041 AS Gr_Liv_Area #> <SQL> (`Bsmt_Full_Bath` - 0.431058020477816) / 0.524761963021569 AS Bsmt_Full_Bath #> <SQL> (`Bsmt_Half_Bath` - 0.0610921501706485) / 0.245175019961096 AS Bsmt_Half_Bath #> <SQL> (`Full_Bath` - 1.56655290102389) / 0.552940611645541 AS Full_Bath #> <SQL> (`Half_Bath` - 0.379522184300341) / 0.502629253315165 AS Half_Bath #> <SQL> (`Bedroom_AbvGr` - 2.8542662116041) / 0.827731141985373 AS Bedroom_AbvGr #> <SQL> (`TotRms_AbvGrd` - 6.44300341296928) / 1.57296439633446 AS TotRms_AbvGrd #> <SQL> (`Fireplaces` - 0.599317406143345) / 0.647920916551218 AS Fireplaces #> <SQL> (`Garage_Cars` - 1.76621160409556) / 0.761136719051791 AS Garage_Cars #> <SQL> (`Garage_Area` - 472.658361774744) / 215.187195710444 AS Garage_Area #> <SQL> (`Wood_Deck_SF` - 93.7518771331058) / 126.361561878906 AS Wood_Deck_SF #> <SQL> (`Mo_Sold` - 6.2160409556314) / 2.71449242543017 AS Mo_Sold #> <SQL> (`Year_Sold` - 2007.79044368601) / 1.31661292261053 AS Year_Sold #> <SQL> (`Longitude` - -93.6428968985665) / 0.0256995708419148 AS Longitude #> <SQL> (`Latitude` - 42.034482233959) / 0.0184100719647591 AS Latitude #> <SQL> (`MS_SubClass_One_and_Half_Story_Finished_All_Ages` - 0.0979522184300341) / 0.297300769930882 AS MS_SubClass_One_and_Half_Story_Finished_All_Ages #> <SQL> (`MS_SubClass_Two_Story_1946_and_Newer` - 0.196245733788396) / 0.397224367384822 AS MS_SubClass_Two_Story_1946_and_Newer #> <SQL> (`MS_SubClass_One_Story_PUD_1946_and_Newer` - 0.0655290102389079) / 0.247499223220503 AS MS_SubClass_One_Story_PUD_1946_and_Newer #> <SQL> (`MS_SubClass_other` - 0.272013651877133) / 0.44507283956783 AS MS_SubClass_other #> <SQL> (`MS_Zoning_Residential_Medium_Density` - 0.157679180887372) / 0.364502129111775 AS MS_Zoning_Residential_Medium_Density #> <SQL> (`MS_Zoning_other` - 0.0665529010238908) / 0.249288632364439 AS MS_Zoning_other #> <SQL> (`Alley_other` - 0.0675767918088737) / 0.251061111160191 AS Alley_other #> <SQL> (`Lot_Shape_Slightly_Irregular` - 0.334129692832765) / 0.471765833087708 AS Lot_Shape_Slightly_Irregular #> <SQL> (`Land_Contour_other` - 0.101365187713311) / 0.301863190671308 AS Land_Contour_other #> <SQL> (`Lot_Config_CulDSac` - 0.0614334470989761) / 0.240164660939135 AS Lot_Config_CulDSac #> <SQL> (`Lot_Config_Inside` - 0.73037542662116) / 0.443840507830802 AS Lot_Config_Inside #> <SQL> (`Neighborhood_College_Creek` - 0.0911262798634812) / 0.287837727934596 AS Neighborhood_College_Creek #> <SQL> (`Neighborhood_Old_Town` - 0.0815699658703072) / 0.273755153326887 AS Neighborhood_Old_Town #> <SQL> (`Neighborhood_Edwards` - 0.0662116040955631) / 0.248694061775502 AS Neighborhood_Edwards #> <SQL> (`Neighborhood_Somerset` - 0.0621160409556314) / 0.241407390841803 AS Neighborhood_Somerset #> <SQL> (`Neighborhood_Northridge_Heights` - 0.0566552901023891) / 0.231222220401891 AS Neighborhood_Northridge_Heights #> <SQL> (`Neighborhood_Gilbert` - 0.0563139931740614) / 0.230566413401495 AS Neighborhood_Gilbert #> <SQL> (`Neighborhood_Sawyer` - 0.0515358361774744) / 0.221125715420464 AS Neighborhood_Sawyer #> <SQL> (`Neighborhood_other` - 0.383276450511945) / 0.486267739839728 AS Neighborhood_other #> <SQL> (`Condition_1_Norm` - 0.860750853242321) / 0.346265423193008 AS Condition_1_Norm #> <SQL> (`Condition_1_other` - 0.0832764505119454) / 0.276346788132951 AS Condition_1_other #> <SQL> (`Bldg_Type_TwnhsE` - 0.0795221843003413) / 0.270598221400413 AS Bldg_Type_TwnhsE #> <SQL> (`Bldg_Type_other` - 0.0928327645051195) / 0.290247470995809 AS Bldg_Type_other #> <SQL> (`House_Style_One_Story` - 0.505460750853242) / 0.500055520299657 AS House_Style_One_Story #> <SQL> (`House_Style_Two_Story` - 0.297952218430034) / 0.457436454275077 AS House_Style_Two_Story #> <SQL> (`House_Style_other` - 0.089419795221843) / 0.285397432815224 AS House_Style_other #> <SQL> (`Overall_Cond_Above_Average` - 0.181911262798635) / 0.385837225088097 AS Overall_Cond_Above_Average #> <SQL> (`Overall_Cond_Good` - 0.133105802047782) / 0.339747027574091 AS Overall_Cond_Good #> <SQL> (`Overall_Cond_other` - 0.120477815699659) / 0.325575012535217 AS Overall_Cond_other #> <SQL> (`Roof_Style_Hip` - 0.188054607508532) / 0.390822469348808 AS Roof_Style_Hip #> <SQL> (`Exterior_1st_Plywood` - 0.0754266211604096) / 0.264123560635696 AS Exterior_1st_Plywood #> <SQL> (`Exterior_1st_Wd.Sdng` - 0.143344709897611) / 0.350483849258404 AS Exterior_1st_Wd.Sdng #> <SQL> (`Exterior_1st_other` - 0.126621160409556) / 0.332604868364192 AS Exterior_1st_other #> <SQL> (`Exterior_2nd_MetalSd` - 0.152559726962457) / 0.35962396527113 AS Exterior_2nd_MetalSd #> <SQL> (`Exterior_2nd_Plywood` - 0.0935153583617747) / 0.291202983863757 AS Exterior_2nd_Plywood #> <SQL> (`Exterior_2nd_VinylSd` - 0.34641638225256) / 0.475908996013667 AS Exterior_2nd_VinylSd #> <SQL> (`Exterior_2nd_Wd.Sdng` - 0.135494880546075) / 0.34230981537792 AS Exterior_2nd_Wd.Sdng #> <SQL> (`Exterior_2nd_other` - 0.133447098976109) / 0.3401153502139 AS Exterior_2nd_other #> <SQL> (`Mas_Vnr_Type_None` - 0.60580204778157) / 0.488761146410944 AS Mas_Vnr_Type_None #> <SQL> (`Mas_Vnr_Type_Stone` - 0.0849829351535836) / 0.278903898290525 AS Mas_Vnr_Type_Stone #> <SQL> (`Exter_Cond_Typical` - 0.869965870307167) / 0.336398390738686 AS Exter_Cond_Typical #> <SQL> (`Foundation_CBlock` - 0.42457337883959) / 0.494362453896239 AS Foundation_CBlock #> <SQL> (`Foundation_PConc` - 0.447098976109215) / 0.497278472872521 AS Foundation_PConc #> <SQL> (`Bsmt_Cond_other` - 0.107167235494881) / 0.309378548700855 AS Bsmt_Cond_other #> <SQL> (`Bsmt_Exposure_Gd` - 0.0969283276450512) / 0.295910648619028 AS Bsmt_Exposure_Gd #> <SQL> (`Bsmt_Exposure_Mn` - 0.0815699658703072) / 0.273755153326887 AS Bsmt_Exposure_Mn #> <SQL> (`Bsmt_Exposure_No` - 0.650511945392491) / 0.476889686750965 AS Bsmt_Exposure_No #> <SQL> (`BsmtFin_Type_1_BLQ` - 0.0918088737201365) / 0.288805248362092 AS BsmtFin_Type_1_BLQ #> <SQL> (`BsmtFin_Type_1_GLQ` - 0.293174061433447) / 0.455295266685691 AS BsmtFin_Type_1_GLQ #> <SQL> (`BsmtFin_Type_1_LwQ` - 0.0525597269624573) / 0.223190957475276 AS BsmtFin_Type_1_LwQ #> <SQL> (`BsmtFin_Type_1_Rec` - 0.0982935153583618) / 0.297761918854365 AS BsmtFin_Type_1_Rec #> <SQL> (`BsmtFin_Type_1_Unf` - 0.290443686006826) / 0.454044614382599 AS BsmtFin_Type_1_Unf #> <SQL> (`BsmtFin_Type_2_other` - 0.147098976109215) / 0.354265015722136 AS BsmtFin_Type_2_other #> <SQL> (`Heating_QC_Good` - 0.162457337883959) / 0.368932792871923 AS Heating_QC_Good #> <SQL> (`Heating_QC_Typical` - 0.294880546075085) / 0.456066879260253 AS Heating_QC_Typical #> <SQL> (`Central_Air_Y` - 0.933105802047782) / 0.249881321917311 AS Central_Air_Y #> <SQL> (`Electrical_SBrkr` - 0.915358361774744) / 0.278395192381353 AS Electrical_SBrkr #> <SQL> (`Functional_other` - 0.0689419795221843) / 0.253398693690373 AS Functional_other #> <SQL> (`Garage_Type_BuiltIn` - 0.063481228668942) / 0.243868119627035 AS Garage_Type_BuiltIn #> <SQL> (`Garage_Type_Detchd` - 0.266894197952218) / 0.442412123006273 AS Garage_Type_Detchd #> <SQL> (`Garage_Type_No_Garage` - 0.0535836177474403) / 0.225232607667554 AS Garage_Type_No_Garage #> <SQL> (`Garage_Finish_RFn` - 0.277133105802048) / 0.447659181683976 AS Garage_Finish_RFn #> <SQL> (`Garage_Finish_Unf` - 0.420136518771331) / 0.493664866213914 AS Garage_Finish_Unf #> <SQL> (`Garage_Cond_Typical` - 0.909556313993174) / 0.286865319578217 AS Garage_Cond_Typical #> <SQL> (`Paved_Drive_Paved` - 0.905119453924915) / 0.293099894291764 AS Paved_Drive_Paved #> <SQL> (`Fence_No_Fence` - 0.804778156996587) / 0.396439042702726 AS Fence_No_Fence #> <SQL> (`Fence_other` - 0.0825938566552901) / 0.275314331476267 AS Fence_other #> <SQL> (`Sale_Type_WD.` - 0.865529010238908) / 0.341215883698071 AS Sale_Type_WD. #> <SQL> (`Sale_Type_other` - 0.052901023890785) / 0.223874096830013 AS Sale_Type_other #> <SQL> (`Sale_Condition_Normal` - 0.823549488054607) / 0.381268070423093 AS Sale_Condition_Normal #> <SQL> (`Sale_Condition_Partial` - 0.083617747440273) / 0.276860941338605 AS Sale_Condition_Partial #> <SQL> (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((180796.060068261 + (`Lot_Frontage` * 955.635117988096)) + (`Lot_Area` * 1516.76354238106)) + (`Year_Built` * 8074.09994040539)) + (`Year_Remod_Add` * 5932.22192419818)) + (`Mas_Vnr_Area` * 6997.31007185545)) + (`BsmtFin_SF_1` * -2548.64981850425)) + (`Bsmt_Unf_SF` * -3924.5747680907)) + (`Total_Bsmt_SF` * 9069.96047666669)) + (`First_Flr_SF` * 6568.67460482994)) + (`Second_Flr_SF` * 15604.7900975189)) + (`Gr_Liv_Area` * 19292.6248611376)) + (`Bsmt_Full_Bath` * 3296.44905707814)) + (`Bsmt_Half_Bath` * -533.514930287271)) + (`Full_Bath` * 2431.14756181473)) + (`Half_Bath` * 1403.62028448762)) + (`Bedroom_AbvGr` * -3345.30530477556)) + (`TotRms_AbvGrd` * 915.757489815814)) + (`Fireplaces` * 4709.45091860584)) + (`Garage_Cars` * 7318.62377224312)) + (`Garage_Area` * 1681.64099399674)) + (`Wood_Deck_SF` * 1017.69312375784)) + (`Mo_Sold` * -217.895951839059)) + (`Year_Sold` * -1007.19585740409)) + (`Longitude` * 2773.88419706624)) + (`Latitude` * 7287.77027386768)) + (`MS_SubClass_One_and_Half_Story_Finished_All_Ages` * -1687.41646914787)) + (`MS_SubClass_Two_Story_1946_and_Newer` * -3446.69967089123)) + (`MS_SubClass_One_Story_PUD_1946_and_Newer` * 62.0994382871203)) + (`MS_SubClass_other` * -535.707786962905)) + (`MS_Zoning_Residential_Medium_Density` * -2675.78583268023)) + (`MS_Zoning_other` * -2924.69567314634)) + (`Alley_other` * -316.99110420436)) + (`Lot_Shape_Slightly_Irregular` * 1245.06912629884)) + (`Land_Contour_other` * 735.184004079579)) + (`Lot_Config_CulDSac` * 2734.60341025334)) + (`Lot_Config_Inside` * 884.153669999531)) + (`Neighborhood_College_Creek` * 4526.82057036694)) + (`Neighborhood_Old_Town` * 1306.00158697638)) + (`Neighborhood_Edwards` * 538.075017955706)) + (`Neighborhood_Somerset` * 6714.41917837367)) + (`Neighborhood_Northridge_Heights` * 10903.2646416317)) + (`Neighborhood_Gilbert` * -3618.64478818433)) + (`Neighborhood_Sawyer` * 2749.71489400735)) + (`Neighborhood_other` * 8551.13463346536)) + (`Condition_1_Norm` * 4909.71154465354)) + (`Condition_1_other` * 1934.41525135307)) + (`Bldg_Type_TwnhsE` * -6070.06289564394)) + (`Bldg_Type_other` * -8159.52292042578)) + (`House_Style_One_Story` * 3381.4443870777)) + (`House_Style_Two_Story` * -3021.28835917451)) + (`House_Style_other` * -904.047140141239)) + (`Overall_Cond_Above_Average` * 1125.01512632643)) + (`Overall_Cond_Good` * 2685.0288965588)) + (`Overall_Cond_other` * 351.426196807593)) + (`Roof_Style_Hip` * 3907.97725791189)) + (`Exterior_1st_Plywood` * 225.291064359607)) + (`Exterior_1st_Wd.Sdng` * 384.762479987225)) + (`Exterior_1st_other` * 4477.11592638794)) + (`Exterior_2nd_MetalSd` * 2284.58015409167)) + (`Exterior_2nd_Plywood` * -1588.48199587957)) + (`Exterior_2nd_VinylSd` * 1474.80729570628)) + (`Exterior_2nd_Wd.Sdng` * 1831.29879973843)) + (`Exterior_2nd_other` * -976.637274539357)) + (`Mas_Vnr_Type_None` * 4971.05846503307)) + (`Mas_Vnr_Type_Stone` * 1944.99896140768)) + (`Exter_Cond_Typical` * 19.6204254164978)) + (`Foundation_CBlock` * -891.869457263651)) + (`Foundation_PConc` * 2068.63383426026)) + (`Bsmt_Cond_other` * -172.334350524601)) + (`Bsmt_Exposure_Gd` * 5690.28657826563)) + (`Bsmt_Exposure_Mn` * -2679.99772126548)) + (`Bsmt_Exposure_No` * -5597.49995139766)) + (`BsmtFin_Type_1_BLQ` * 432.577279364535)) + (`BsmtFin_Type_1_GLQ` * 5201.48231449897)) + (`BsmtFin_Type_1_LwQ` * 126.495750334264)) + (`BsmtFin_Type_1_Rec` * 1691.75502844561)) + (`BsmtFin_Type_1_Unf` * 3596.92372466207)) + (`BsmtFin_Type_2_other` * -666.08085354579)) + (`Heating_QC_Good` * -788.259085823183)) + (`Heating_QC_Typical` * -2456.20980903068)) + (`Central_Air_Y` * 402.919986048993)) + (`Electrical_SBrkr` * 139.091114370893)) + (`Functional_other` * -5120.42353672279)) + (`Garage_Type_BuiltIn` * -427.250007631447)) + (`Garage_Type_Detchd` * -207.741377522264)) + (`Garage_Type_No_Garage` * 2153.29068352442)) + (`Garage_Finish_RFn` * -3908.39521205631)) + (`Garage_Finish_Unf` * -2216.40003714454)) + (`Garage_Cond_Typical` * 1711.68386807371)) + (`Paved_Drive_Paved` * 913.813251909221)) + (`Fence_No_Fence` * -1204.23822888682)) + (`Fence_other` * -406.889886687666)) + (`Sale_Type_WD.` * -4040.58640251203)) + (`Sale_Type_other` * -2800.14205589685)) + (`Sale_Condition_Normal` * 2884.92023929979)) + (`Sale_Condition_Partial` * 2258.73838712948) AS .pred"},{"path":[]},{"path":"https://orbital.tidymodels.org/articles/pros-cons.html","id":"smaller-object-size","dir":"Articles","previous_headings":"Pros","what":"Smaller object size","title":"Pros and Cons","text":"orbital object going smaller memory footprint original workflow. Even smaller butchered version workflow. happening orbital object saving operations information needed perform prediction. model diagnostic can’t done orbital objects. orbital size isn’t minimum size possible perform predictions, considerably smaller workflow size.","code":""},{"path":"https://orbital.tidymodels.org/articles/pros-cons.html","id":"fewer-dependencies-needed","dir":"Articles","previous_headings":"Pros","what":"Fewer dependencies needed","title":"Pros and Cons","text":"predicting workflow object need load several packages. include; workflows, parsnip, recipes, engine model possible additional packages supporting specific recipes steps. packages imports packages well. predicting orbital object need orbital package, imports cli, rlang, dplyr. hopefully leads smaller easier--handle production environment.","code":""},{"path":"https://orbital.tidymodels.org/articles/pros-cons.html","id":"prediction-in-databases","dir":"Articles","previous_headings":"Pros","what":"Prediction in databases","title":"Pros and Cons","text":"Prediction using orbital objects can done directly using databases SQL, spark, duckdb arrow seen Using Databases.","code":""},{"path":"https://orbital.tidymodels.org/articles/pros-cons.html","id":"code-generation","dir":"Articles","previous_headings":"Pros","what":"Code generation","title":"Pros and Cons","text":"Orbital provides code generation functions able predictions manners. One function orbital_sql() can use generate SQL run mimics prediction. means little bit work, can R-less prediction, directly database.","code":""},{"path":[]},{"path":"https://orbital.tidymodels.org/articles/pros-cons.html","id":"not-all-models-are-supported","dir":"Articles","previous_headings":"Cons","what":"Not all models are supported","title":"Pros and Cons","text":"main con people workflow uses model recipe isn’t supported. Sometimes can fix using slightly different model changing recipe little. suspect model recipes step supported isn’t right now, please file issue. groups models just don’t work framework due nature. Please note models work SQL spark exceptions.","code":""},{"path":"https://orbital.tidymodels.org/articles/pros-cons.html","id":"doesnt-do-input-checking","dir":"Articles","previous_headings":"Cons","what":"Doesn’t do input checking","title":"Pros and Cons","text":"Tidymodels provides lot input checking error handling make sure know happening something goes wrong. Orbital doesn’t . make sure data used prediction right types.","code":""},{"path":"https://orbital.tidymodels.org/articles/pros-cons.html","id":"cant-guarantee-predictions-speed","dir":"Articles","previous_headings":"Cons","what":"Can’t guarantee predictions speed","title":"Pros and Cons","text":"Predictions orbital objects generally pretty fast, unlikely faster, sometimes slower. many operations done column column, whereas original implementation uses something faster, linear algebra.","code":""},{"path":"https://orbital.tidymodels.org/articles/pros-cons.html","id":"factors-are-not-universally-supported","dir":"Articles","previous_headings":"Cons","what":"Factors are not universally supported","title":"Pros and Cons","text":"Care taken try maintain variable types, sometimes, especially factors won’t . converted character vectors, especially databases factors aren’t thing. big deal time, known downside.","code":""},{"path":"https://orbital.tidymodels.org/articles/pros-cons.html","id":"modifies-the-whole-data-set","dir":"Articles","previous_headings":"Cons","what":"Modifies the whole data set","title":"Pros and Cons","text":"Modifications done data . applying changes using orbital_inline() resulting data unlikely useful predictions .","code":""},{"path":"https://orbital.tidymodels.org/articles/supported-models.html","id":"supported-models","dir":"Articles","previous_headings":"","what":"Supported models","title":"Supported Models and recipes steps","text":"table doesn’t exhaustively list fully unsupported models. Please file issue add model table.","code":"## Error in get(paste0(generic, \".\", class), envir = get_method_env()) :  ##   object 'type_sum.accel' not found"},{"path":"https://orbital.tidymodels.org/articles/supported-models.html","id":"recipes-steps","dir":"Articles","previous_headings":"","what":"Recipes steps","title":"Supported Models and recipes steps","text":"following 46 recipes steps supported step_adasyn() step_bin2factor() step_BoxCox() step_bsmote() step_center() step_corr() step_discretize() step_downsample() step_dummy() step_filter_missing() step_impute_mean() step_impute_median() step_impute_mode() step_indicate_na() step_intercept() step_inverse() step_lag() step_lencode_bayes() step_lencode_glm() step_lencode_mixed() step_lincomb() step_log() step_mutate() step_nearmiss() step_normalize() step_novel() step_nzv() step_other() step_pca() step_pca_sparse() step_pca_sparse_bayes() step_pca_truncated() step_range() step_ratio() step_rename() step_rm() step_rose() step_scale() step_select() step_smote() step_smotenc() step_sqrt() step_tomek() step_unknown() step_upsample() step_zv()","code":""},{"path":"https://orbital.tidymodels.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emil Hvitfeldt. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://orbital.tidymodels.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hvitfeldt E (2024). orbital: Predict 'tidymodels' Workflows Databases. R package version 0.3.0, https://orbital.tidymodels.org, https://github.com/tidymodels/orbital.","code":"@Manual{,   title = {orbital: Predict with 'tidymodels' Workflows in Databases},   author = {Emil Hvitfeldt},   year = {2024},   note = {R package version 0.3.0, https://orbital.tidymodels.org},   url = {https://github.com/tidymodels/orbital}, }"},{"path":"https://orbital.tidymodels.org/index.html","id":"orbital-","dir":"","previous_headings":"","what":"Predict with tidymodels Workflows in Databases","title":"Predict with tidymodels Workflows in Databases","text":"goal orbital enable running predictions tidymodels workflows inside databases.","code":""},{"path":"https://orbital.tidymodels.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Predict with tidymodels Workflows in Databases","text":"install , use: can install development version orbital GitHub :","code":"install.packages(\"orbital\") # install.packages(\"devtools\") devtools::install_github(\"tidymodels/orbital\")"},{"path":"https://orbital.tidymodels.org/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Predict with tidymodels Workflows in Databases","text":"Given fitted workflow can predict like normal. can get results first creating orbital object “predicting” using predict() get results can also predict SQL databases spark databases","code":"library(tidymodels)  rec_spec <- recipe(mpg ~ ., data = mtcars) |>   step_normalize(all_numeric_predictors())  lm_spec <- linear_reg()  wf_spec <- workflow(rec_spec, lm_spec)  wf_fit <- fit(wf_spec, mtcars) predict(wf_fit, mtcars) #> # A tibble: 32 × 1 #>    .pred #>    <dbl> #>  1  22.6 #>  2  22.1 #>  3  26.3 #>  4  21.2 #>  5  17.7 #>  6  20.4 #>  7  14.4 #>  8  22.5 #>  9  24.4 #> 10  18.7 #> # ℹ 22 more rows library(orbital) orbital_obj <- orbital(wf_fit) orbital_obj #>  #> ── orbital Object ────────────────────────────────────────────────────────────── #> • cyl = (cyl - 6.1875) / 1.785922 #> • disp = (disp - 230.7219) / 123.9387 #> • hp = (hp - 146.6875) / 68.56287 #> • drat = (drat - 3.596562) / 0.5346787 #> • wt = (wt - 3.21725) / 0.9784574 #> • qsec = (qsec - 17.84875) / 1.786943 #> • vs = (vs - 0.4375) / 0.5040161 #> • am = (am - 0.40625) / 0.4989909 #> • gear = (gear - 3.6875) / 0.7378041 #> • carb = (carb - 2.8125) / 1.6152 #> • .pred = 20.09062 + (cyl * -0.199024) + (disp * 1.652752) + (hp * -1.472 ... #> ──────────────────────────────────────────────────────────────────────────────── #> 11 equations in total. predict(orbital_obj, as_tibble(mtcars)) #> # A tibble: 32 × 1 #>    .pred #>    <dbl> #>  1  22.6 #>  2  22.1 #>  3  26.3 #>  4  21.2 #>  5  17.7 #>  6  20.4 #>  7  14.4 #>  8  22.5 #>  9  24.4 #> 10  18.7 #> # ℹ 22 more rows library(DBI) library(RSQLite)  con <- dbConnect(SQLite(), path = \":memory:\") db_mtcars <- copy_to(con, mtcars)  predict(orbital_obj, db_mtcars) #> # Source:   SQL [?? x 1] #> # Database: sqlite 3.47.0 [] #>    .pred #>    <dbl> #>  1  22.6 #>  2  22.1 #>  3  26.3 #>  4  21.2 #>  5  17.7 #>  6  20.4 #>  7  14.4 #>  8  22.5 #>  9  24.4 #> 10  18.7 #> # ℹ more rows library(sparklyr) #>  #> Attaching package: 'sparklyr' #> The following object is masked from 'package:purrr': #>  #>     invoke #> The following object is masked from 'package:stats': #>  #>     filter sc <- spark_connect(master = \"local\")  sc_mtcars <- copy_to(sc, mtcars, overwrite = TRUE)  predict(orbital_obj, sc_mtcars) #> # Source:   SQL [?? x 1] #> # Database: spark_connection #>    .pred #>    <dbl> #>  1  22.6 #>  2  22.1 #>  3  26.3 #>  4  21.2 #>  5  17.7 #>  6  20.4 #>  7  14.4 #>  8  22.5 #>  9  24.4 #> 10  18.7 #> # ℹ more rows"},{"path":"https://orbital.tidymodels.org/index.html","id":"supported-models-and-recipes-steps","dir":"","previous_headings":"","what":"Supported models and recipes steps","title":"Predict with tidymodels Workflows in Databases","text":"Full list supported models recipes steps can found : vignette(\"supported-models\").","code":""},{"path":"https://orbital.tidymodels.org/index.html","id":"contributing","dir":"","previous_headings":"","what":"contributing","title":"Predict with tidymodels Workflows in Databases","text":"project released Contributor Code Conduct. contributing project, agree abide terms. questions discussions tidymodels packages, modeling, machine learning, please post Posit Community. think encountered bug, please submit issue. Either way, learn create share reprex (minimal, reproducible example), clearly communicate code. Check details contributing guidelines tidymodels packages get help.","code":""},{"path":"https://orbital.tidymodels.org/reference/augment.orbital_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment using orbital objects — augment.orbital_class","title":"Augment using orbital objects — augment.orbital_class","text":"augment() add column(s) predictions given data.","code":""},{"path":"https://orbital.tidymodels.org/reference/augment.orbital_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment using orbital objects — augment.orbital_class","text":"","code":"# S3 method for class 'orbital_class' augment(x, new_data, ...)"},{"path":"https://orbital.tidymodels.org/reference/augment.orbital_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment using orbital objects — augment.orbital_class","text":"x orbital object. new_data data frame remote database table. ... currently used.","code":""},{"path":"https://orbital.tidymodels.org/reference/augment.orbital_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment using orbital objects — augment.orbital_class","text":"modified data frame remote database table.","code":""},{"path":"https://orbital.tidymodels.org/reference/augment.orbital_class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment using orbital objects — augment.orbital_class","text":"function shorthand following code   Note augment() works better safer also works data set data bases. function confirmed work work spark data bases arrow tables.","code":"dplyr::bind_cols(   predict(orbital_obj, new_data),   new_data )"},{"path":"https://orbital.tidymodels.org/reference/augment.orbital_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment using orbital objects — augment.orbital_class","text":"","code":"library(workflows) library(recipes) #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #>  #> Attaching package: ‘recipes’ #> The following object is masked from ‘package:stats’: #>  #>     step library(parsnip)  rec_spec <- recipe(mpg ~ ., data = mtcars) %>%   step_normalize(all_numeric_predictors())  lm_spec <- linear_reg()  wf_spec <- workflow(rec_spec, lm_spec)  wf_fit <- fit(wf_spec, mtcars)  orbital_obj <- orbital(wf_fit)  augment(orbital_obj, mtcars) #>       .pred  mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> 1  22.59951 21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> 2  22.11189 21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> 3  26.25064 22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> 4  21.23740 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> 5  17.69343 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> 6  20.38304 18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> 7  14.38626 14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> 8  22.49601 24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> 9  24.41909 22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> 10 18.69903 19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> 11 19.19165 17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> 12 14.17216 16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> 13 15.59957 17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> 14 15.74222 15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> 15 12.03401 10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> 16 10.93644 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> 17 10.49363 14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> 18 27.77291 32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> 19 29.89674 30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> 20 29.51237 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> 21 23.64310 21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> 22 16.94305 15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> 23 17.73218 15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> 24 13.30602 13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> 25 16.69168 19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> 26 28.29347 27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> 27 26.15295 26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> 28 27.63627 30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> 29 18.87004 15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> 30 19.69383 19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> 31 13.94112 15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> 32 24.36827 21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2"},{"path":"https://orbital.tidymodels.org/reference/orbital.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn tidymodels objects into orbital objects — orbital","title":"Turn tidymodels objects into orbital objects — orbital","text":"Fitted workflows, parsnip objects, recipes objects can turned orbital object contain information needed perform predictions.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn tidymodels objects into orbital objects — orbital","text":"","code":"orbital(x, ..., prefix = \".pred\", type = NULL)"},{"path":"https://orbital.tidymodels.org/reference/orbital.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn tidymodels objects into orbital objects — orbital","text":"x fitted workflow, parsnip, recipes object. ... currently used. prefix single string, specifies prediction naming scheme. x produces prediction, tidymodels standards dictate predictions start .pred. valid name data bases. type vector strings, specifies prediction type. Regression models allow \"numeric\" classification models allow \"class\" \"prob\". Multiple values allowed produce hard soft predictions classification models. Defaults NULL defaults \"numeric\" regression models \"class\" classification models.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn tidymodels objects into orbital objects — orbital","text":"orbital object.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Turn tidymodels objects into orbital objects — orbital","text":"orbital object contains information needed perform predictions. makes objects substantially smaller original objects. main downside object input checking removed, thus user make sure data correct. printing orbital objects reduce number significant digits easy viewing, can changes using digits argument print() like print(orbital_object, digits = 10). printing likewise truncates equation fit one line. can turned using truncate argument like print(orbital_object, truncate = FALSE). Full list supported models recipes steps can found : vignette(\"supported-models\"). objects useful . can used predict() , generate code using functions orbital_sql() orbital_dt().","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn tidymodels objects into orbital objects — orbital","text":"","code":"library(workflows) library(recipes) library(parsnip)  rec_spec <- recipe(mpg ~ ., data = mtcars) %>%   step_normalize(all_numeric_predictors())  lm_spec <- linear_reg()  wf_spec <- workflow(rec_spec, lm_spec)  wf_fit <- fit(wf_spec, mtcars)  orbital(wf_fit) #>  #> ── orbital Object ──────────────────────────────────────────────────────── #> • cyl = (cyl - 6.1875) / 1.785922 #> • disp = (disp - 230.7219) / 123.9387 #> • hp = (hp - 146.6875) / 68.56287 #> • drat = (drat - 3.596562) / 0.5346787 #> • wt = (wt - 3.21725) / 0.9784574 #> • qsec = (qsec - 17.84875) / 1.786943 #> • vs = (vs - 0.4375) / 0.5040161 #> • am = (am - 0.40625) / 0.4989909 #> • gear = (gear - 3.6875) / 0.7378041 #> • carb = (carb - 2.8125) / 1.6152 #> • .pred = 20.09062 + (cyl * -0.199024) + (disp * 1.652752) + (hp * ... #> ────────────────────────────────────────────────────────────────────────── #> 11 equations in total.  # Also works on parsnip object by itself fit(lm_spec, mpg ~ disp, data = mtcars) %>%   orbital() #>  #> ── orbital Object ──────────────────────────────────────────────────────── #> • .pred = 29.59985 + (disp * -0.04121512) #> ────────────────────────────────────────────────────────────────────────── #> 1 equations in total.  # And prepped recipes prep(rec_spec) %>%   orbital() #>  #> ── orbital Object ──────────────────────────────────────────────────────── #> • cyl = (cyl - 6.1875) / 1.785922 #> • disp = (disp - 230.7219) / 123.9387 #> • hp = (hp - 146.6875) / 68.56287 #> • drat = (drat - 3.596562) / 0.5346787 #> • wt = (wt - 3.21725) / 0.9784574 #> • qsec = (qsec - 17.84875) / 1.786943 #> • vs = (vs - 0.4375) / 0.5040161 #> • am = (am - 0.40625) / 0.4989909 #> • gear = (gear - 3.6875) / 0.7378041 #> • carb = (carb - 2.8125) / 1.6152 #> ────────────────────────────────────────────────────────────────────────── #> 10 equations in total."},{"path":"https://orbital.tidymodels.org/reference/orbital_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to data.table code — orbital_dt","title":"Convert to data.table code — orbital_dt","text":"Returns data.table code equivilant prediction code.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to data.table code — orbital_dt","text":"","code":"orbital_dt(x)"},{"path":"https://orbital.tidymodels.org/reference/orbital_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to data.table code — orbital_dt","text":"x orbital object. function requires dtplyr installed run. resulting code likely need adopted use-case. likely removing initial copy(data-name) start.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to data.table code — orbital_dt","text":"data.table code.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_dt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to data.table code — orbital_dt","text":"","code":"library(workflows) library(recipes) library(parsnip)  rec_spec <- recipe(mpg ~ ., data = mtcars) %>%   step_normalize(all_numeric_predictors())  lm_spec <- linear_reg()  wf_spec <- workflow(rec_spec, lm_spec)  wf_fit <- fit(wf_spec, mtcars)  orbital_obj <- orbital(wf_fit)  orbital_dt(orbital_obj) #> copy(`_DT1`)[, `:=`(c(\"cyl\", \"disp\", \"hp\", \"drat\", \"wt\", \"qsec\",  #>     \"vs\", \"am\", \"gear\", \"carb\", \".pred\"), { #>     cyl <- (cyl - 6.1875)/1.78592164694654 #>     disp <- (disp - 230.721875)/123.938693831382 #>     hp <- (hp - 146.6875)/68.5628684893206 #>     drat <- (drat - 3.5965625)/0.534678736070971 #>     wt <- (wt - 3.21725)/0.978457442989697 #>     qsec <- (qsec - 17.84875)/1.78694323609684 #>     vs <- (vs - 0.4375)/0.504016128774185 #>     am <- (am - 0.40625)/0.498990917235846 #>     gear <- (gear - 3.6875)/0.737804065256947 #>     carb <- (carb - 2.8125)/1.61519997763185 #>     .pred <- 20.090625 + (cyl * -0.199023961804221) + (disp *  #>         1.65275221678761) + (hp * -1.47287569912409) + (drat *  #>         0.420851499782799) + (wt * -3.63526678164088) + (qsec *  #>         1.46715321419096) + (vs * 0.160157583474124) + (am *  #>         1.25757032609057) + (gear * 0.483566388425266) + (carb *  #>         -0.322101975983201) #>     .(cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, .pred) #> })]"},{"path":"https://orbital.tidymodels.org/reference/orbital_inline.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert orbital objects to quosures — orbital_inline","title":"Convert orbital objects to quosures — orbital_inline","text":"Use orbital object splicing function apply orbital prediction quosure aware function dplyr::mutate().","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_inline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert orbital objects to quosures — orbital_inline","text":"","code":"orbital_inline(x)"},{"path":"https://orbital.tidymodels.org/reference/orbital_inline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert orbital objects to quosures — orbital_inline","text":"x orbital object.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_inline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert orbital objects to quosures — orbital_inline","text":"list quosures.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_inline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert orbital objects to quosures — orbital_inline","text":"function mostly going used Dots Injection. function used internally predict(), also exported user flexibility. used !!! seen examples. Note taken using function modifies existing variables creates new variables, unlike predict() returns predictions.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_inline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert orbital objects to quosures — orbital_inline","text":"","code":"library(workflows) library(recipes) library(parsnip)  rec_spec <- recipe(mpg ~ ., data = mtcars) %>%   step_normalize(all_numeric_predictors())  lm_spec <- linear_reg()  wf_spec <- workflow(rec_spec, lm_spec)  wf_fit <- fit(wf_spec, mtcars)  orbital_obj <- orbital(wf_fit)  orbital_inline(orbital_obj) #> <list_of<quosure>> #>  #> $cyl #> <quosure> #> expr: ^(cyl - 6.1875) / 1.78592164694654 #> env:  global #>  #> $disp #> <quosure> #> expr: ^(disp - 230.721875) / 123.938693831382 #> env:  global #>  #> $hp #> <quosure> #> expr: ^(hp - 146.6875) / 68.5628684893206 #> env:  global #>  #> $drat #> <quosure> #> expr: ^(drat - 3.5965625) / 0.534678736070971 #> env:  global #>  #> $wt #> <quosure> #> expr: ^(wt - 3.21725) / 0.978457442989697 #> env:  global #>  #> $qsec #> <quosure> #> expr: ^(qsec - 17.84875) / 1.78694323609684 #> env:  global #>  #> $vs #> <quosure> #> expr: ^(vs - 0.4375) / 0.504016128774185 #> env:  global #>  #> $am #> <quosure> #> expr: ^(am - 0.40625) / 0.498990917235846 #> env:  global #>  #> $gear #> <quosure> #> expr: ^(gear - 3.6875) / 0.737804065256947 #> env:  global #>  #> $carb #> <quosure> #> expr: ^(carb - 2.8125) / 1.61519997763185 #> env:  global #>  #> $.pred #> <quosure> #> expr: ^20.090625 + (cyl * -0.199023961804221) + (disp * #>           1.65275221678761) + (hp * -1.47287569912409) + (drat * #>           0.420851499782799) + (wt * -3.63526678164088) + (qsec * #>           1.46715321419096) + (vs * 0.160157583474124) + (am * #>           1.25757032609057) + (gear * 0.483566388425266) + (carb * #>           -0.322101975983201) #> env:  global #>   library(dplyr)  mtcars %>%   mutate(!!!orbital_inline(orbital_obj)) #>                      mpg        cyl        disp          hp        drat #> Mazda RX4           21.0 -0.1049878 -0.57061982 -0.53509284  0.56751369 #> Mazda RX4 Wag       21.0 -0.1049878 -0.57061982 -0.53509284  0.56751369 #> Datsun 710          22.8 -1.2248578 -0.99018209 -0.78304046  0.47399959 #> Hornet 4 Drive      21.4 -0.1049878  0.22009369 -0.53509284 -0.96611753 #> Hornet Sportabout   18.7  1.0148821  1.04308123  0.41294217 -0.83519779 #> Valiant             18.1 -0.1049878 -0.04616698 -0.60801861 -1.56460776 #> Duster 360          14.3  1.0148821  1.04308123  1.43390296 -0.72298087 #> Merc 240D           24.4 -1.2248578 -0.67793094 -1.23518023  0.17475447 #> Merc 230            22.8 -1.2248578 -0.72553512 -0.75387015  0.60491932 #> Merc 280            19.2 -0.1049878 -0.50929918 -0.34548584  0.60491932 #> Merc 280C           17.8 -0.1049878 -0.50929918 -0.34548584  0.60491932 #> Merc 450SE          16.4  1.0148821  0.36371309  0.48586794 -0.98482035 #> Merc 450SL          17.3  1.0148821  0.36371309  0.48586794 -0.98482035 #> Merc 450SLC         15.2  1.0148821  0.36371309  0.48586794 -0.98482035 #> Cadillac Fleetwood  10.4  1.0148821  1.94675381  0.85049680 -1.24665983 #> Lincoln Continental 10.4  1.0148821  1.84993175  0.99634834 -1.11574009 #> Chrysler Imperial   14.7  1.0148821  1.68856165  1.21512565 -0.68557523 #> Fiat 128            32.4 -1.2248578 -1.22658929 -1.17683962  0.90416444 #> Honda Civic         30.4 -1.2248578 -1.25079481 -1.38103178  2.49390411 #> Toyota Corolla      33.9 -1.2248578 -1.28790993 -1.19142477  1.16600392 #> Toyota Corona       21.5 -1.2248578 -0.89255318 -0.72469984  0.19345729 #> Dodge Challenger    15.5  1.0148821  0.70420401  0.04831332 -1.56460776 #> AMC Javelin         15.2  1.0148821  0.59124494  0.04831332 -0.83519779 #> Camaro Z28          13.3  1.0148821  0.96239618  1.43390296  0.24956575 #> Pontiac Firebird    19.2  1.0148821  1.36582144  0.41294217 -0.96611753 #> Fiat X1-9           27.3 -1.2248578 -1.22416874 -1.17683962  0.90416444 #> Porsche 914-2       26.0 -1.2248578 -0.89093948 -0.81221077  1.55876313 #> Lotus Europa        30.4 -1.2248578 -1.09426581 -0.49133738  0.32437703 #> Ford Pantera L      15.8  1.0148821  0.97046468  1.71102089  1.16600392 #> Ferrari Dino        19.7 -0.1049878 -0.69164740  0.41294217  0.04383473 #> Maserati Bora       15.0  1.0148821  0.56703942  2.74656682 -0.10578782 #> Volvo 142E          21.4 -1.2248578 -0.88529152 -0.54967799  0.96027290 #>                               wt        qsec         vs         am #> Mazda RX4           -0.610399567 -0.77716515 -0.8680278  1.1899014 #> Mazda RX4 Wag       -0.349785269 -0.46378082 -0.8680278  1.1899014 #> Datsun 710          -0.917004624  0.42600682  1.1160357  1.1899014 #> Hornet 4 Drive      -0.002299538  0.89048716  1.1160357 -0.8141431 #> Hornet Sportabout    0.227654255 -0.46378082 -0.8680278 -0.8141431 #> Valiant              0.248094592  1.32698675  1.1160357 -0.8141431 #> Duster 360           0.360516446 -1.12412636 -0.8680278 -0.8141431 #> Merc 240D           -0.027849959  1.20387148  1.1160357 -0.8141431 #> Merc 230            -0.068730634  2.82675459  1.1160357 -0.8141431 #> Merc 280             0.227654255  0.25252621  1.1160357 -0.8141431 #> Merc 280C            0.227654255  0.58829513  1.1160357 -0.8141431 #> Merc 450SE           0.871524874 -0.25112717 -0.8680278 -0.8141431 #> Merc 450SL           0.524039143 -0.13920420 -0.8680278 -0.8141431 #> Merc 450SLC          0.575139986  0.08464175 -0.8680278 -0.8141431 #> Cadillac Fleetwood   2.077504765  0.07344945 -0.8680278 -0.8141431 #> Lincoln Continental  2.255335698 -0.01608893 -0.8680278 -0.8141431 #> Chrysler Imperial    2.174596366 -0.23993487 -0.8680278 -0.8141431 #> Fiat 128            -1.039646647  0.90727560  1.1160357  1.1899014 #> Honda Civic         -1.637526508  0.37564148  1.1160357  1.1899014 #> Toyota Corolla      -1.412682800  1.14790999  1.1160357  1.1899014 #> Toyota Corona       -0.768812180  1.20946763  1.1160357 -0.8141431 #> Dodge Challenger     0.309415603 -0.54772305 -0.8680278 -0.8141431 #> AMC Javelin          0.222544170 -0.30708866 -0.8680278 -0.8141431 #> Camaro Z28           0.636460997 -1.36476075 -0.8680278 -0.8141431 #> Pontiac Firebird     0.641571082 -0.44699237 -0.8680278 -0.8141431 #> Fiat X1-9           -1.310481114  0.58829513  1.1160357  1.1899014 #> Porsche 914-2       -1.100967659 -0.64285758 -0.8680278  1.1899014 #> Lotus Europa        -1.741772228 -0.53093460  1.1160357  1.1899014 #> Ford Pantera L      -0.048290296 -1.87401028 -0.8680278  1.1899014 #> Ferrari Dino        -0.457097039 -1.31439542 -0.8680278  1.1899014 #> Maserati Bora        0.360516446 -1.81804880 -0.8680278  1.1899014 #> Volvo 142E          -0.446876870  0.42041067  1.1160357  1.1899014 #>                           gear       carb    .pred #> Mazda RX4            0.4235542  0.7352031 22.59951 #> Mazda RX4 Wag        0.4235542  0.7352031 22.11189 #> Datsun 710           0.4235542 -1.1221521 26.25064 #> Hornet 4 Drive      -0.9318192 -1.1221521 21.23740 #> Hornet Sportabout   -0.9318192 -0.5030337 17.69343 #> Valiant             -0.9318192 -1.1221521 20.38304 #> Duster 360          -0.9318192  0.7352031 14.38626 #> Merc 240D            0.4235542 -0.5030337 22.49601 #> Merc 230             0.4235542 -0.5030337 24.41909 #> Merc 280             0.4235542  0.7352031 18.69903 #> Merc 280C            0.4235542  0.7352031 19.19165 #> Merc 450SE          -0.9318192  0.1160847 14.17216 #> Merc 450SL          -0.9318192  0.1160847 15.59957 #> Merc 450SLC         -0.9318192  0.1160847 15.74222 #> Cadillac Fleetwood  -0.9318192  0.7352031 12.03401 #> Lincoln Continental -0.9318192  0.7352031 10.93644 #> Chrysler Imperial   -0.9318192  0.7352031 10.49363 #> Fiat 128             0.4235542 -1.1221521 27.77291 #> Honda Civic          0.4235542 -0.5030337 29.89674 #> Toyota Corolla       0.4235542 -1.1221521 29.51237 #> Toyota Corona       -0.9318192 -1.1221521 23.64310 #> Dodge Challenger    -0.9318192 -0.5030337 16.94305 #> AMC Javelin         -0.9318192 -0.5030337 17.73218 #> Camaro Z28          -0.9318192  0.7352031 13.30602 #> Pontiac Firebird    -0.9318192 -0.5030337 16.69168 #> Fiat X1-9            0.4235542 -1.1221521 28.29347 #> Porsche 914-2        1.7789276 -0.5030337 26.15295 #> Lotus Europa         1.7789276 -0.5030337 27.63627 #> Ford Pantera L       1.7789276  0.7352031 18.87004 #> Ferrari Dino         1.7789276  1.9734398 19.69383 #> Maserati Bora        1.7789276  3.2116766 13.94112 #> Volvo 142E           0.4235542 -0.5030337 24.36827"},{"path":"https://orbital.tidymodels.org/reference/orbital_json_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read orbital json file — orbital_json_read","title":"Read orbital json file — orbital_json_read","text":"Reading orbital object disk","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_json_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read orbital json file — orbital_json_read","text":"","code":"orbital_json_read(path)"},{"path":"https://orbital.tidymodels.org/reference/orbital_json_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read orbital json file — orbital_json_read","text":"path file disk.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_json_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read orbital json file — orbital_json_read","text":"orbital object.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_json_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read orbital json file — orbital_json_read","text":"function aware version field orbital object, read correctly, according specification.","code":""},{"path":[]},{"path":"https://orbital.tidymodels.org/reference/orbital_json_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read orbital json file — orbital_json_read","text":"","code":"library(workflows) library(recipes) library(parsnip)  rec_spec <- recipe(mpg ~ ., data = mtcars) %>%   step_normalize(all_numeric_predictors())  lm_spec <- linear_reg()  wf_spec <- workflow(rec_spec, lm_spec)  wf_fit <- fit(wf_spec, mtcars)  orbital_obj <- orbital(wf_fit)  tmp_file <- tempfile()  orbital_json_write(orbital_obj, tmp_file)  orbital_json_read(tmp_file) #>  #> ── orbital Object ──────────────────────────────────────────────────────── #> • cyl = (cyl - 6.1875) / 1.785922 #> • disp = (disp - 230.7219) / 123.9387 #> • hp = (hp - 146.6875) / 68.56287 #> • drat = (drat - 3.596562) / 0.5346787 #> • wt = (wt - 3.21725) / 0.9784574 #> • qsec = (qsec - 17.84875) / 1.786943 #> • vs = (vs - 0.4375) / 0.5040161 #> • am = (am - 0.40625) / 0.4989909 #> • gear = (gear - 3.6875) / 0.7378041 #> • carb = (carb - 2.8125) / 1.6152 #> • .pred = 20.09062 + (cyl * -0.199024) + (disp * 1.652752) + (hp * ... #> ────────────────────────────────────────────────────────────────────────── #> 11 equations in total."},{"path":"https://orbital.tidymodels.org/reference/orbital_json_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Save orbital object as json file — orbital_json_write","title":"Save orbital object as json file — orbital_json_write","text":"Saving orbital object disk human machine readable way.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_json_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save orbital object as json file — orbital_json_write","text":"","code":"orbital_json_write(x, path)"},{"path":"https://orbital.tidymodels.org/reference/orbital_json_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save orbital object as json file — orbital_json_write","text":"x orbital object. path file disk.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_json_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save orbital object as json file — orbital_json_write","text":"Nothing.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_json_write.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save orbital object as json file — orbital_json_write","text":"structure resulting JSON file allows easy reading, orbital orbital_json_read(), potentially packages langauges. file versioned version field allow changes backwards combatible older file versions.","code":""},{"path":[]},{"path":"https://orbital.tidymodels.org/reference/orbital_json_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save orbital object as json file — orbital_json_write","text":"","code":"library(workflows) library(recipes) library(parsnip)  rec_spec <- recipe(mpg ~ ., data = mtcars) %>%   step_normalize(all_numeric_predictors())  lm_spec <- linear_reg()  wf_spec <- workflow(rec_spec, lm_spec)  wf_fit <- fit(wf_spec, mtcars)  orbital_obj <- orbital(wf_fit)  tmp_file <- tempfile()  orbital_json_write(orbital_obj, tmp_file)  readLines(tmp_file) #>  [1] \"{\"                                                                                                                                                                                                                                                                                                                    #>  [2] \"  \\\"actions\\\": {\"                                                                                                                                                                                                                                                                                                     #>  [3] \"    \\\"cyl\\\": \\\"(cyl - 6.1875) / 1.78592164694654\\\",\"                                                                                                                                                                                                                                                                  #>  [4] \"    \\\"disp\\\": \\\"(disp - 230.721875) / 123.938693831382\\\",\"                                                                                                                                                                                                                                                            #>  [5] \"    \\\"hp\\\": \\\"(hp - 146.6875) / 68.5628684893206\\\",\"                                                                                                                                                                                                                                                                  #>  [6] \"    \\\"drat\\\": \\\"(drat - 3.5965625) / 0.534678736070971\\\",\"                                                                                                                                                                                                                                                            #>  [7] \"    \\\"wt\\\": \\\"(wt - 3.21725) / 0.978457442989697\\\",\"                                                                                                                                                                                                                                                                  #>  [8] \"    \\\"qsec\\\": \\\"(qsec - 17.84875) / 1.78694323609684\\\",\"                                                                                                                                                                                                                                                              #>  [9] \"    \\\"vs\\\": \\\"(vs - 0.4375) / 0.504016128774185\\\",\"                                                                                                                                                                                                                                                                   #> [10] \"    \\\"am\\\": \\\"(am - 0.40625) / 0.498990917235846\\\",\"                                                                                                                                                                                                                                                                  #> [11] \"    \\\"gear\\\": \\\"(gear - 3.6875) / 0.737804065256947\\\",\"                                                                                                                                                                                                                                                               #> [12] \"    \\\"carb\\\": \\\"(carb - 2.8125) / 1.61519997763185\\\",\"                                                                                                                                                                                                                                                                #> [13] \"    \\\".pred\\\": \\\"20.090625 + (cyl * -0.199023961804221) + (disp * 1.65275221678761) + (hp * -1.47287569912409) + (drat * 0.420851499782799) + (wt * -3.63526678164088) + (qsec * 1.46715321419096) + (vs * 0.160157583474124) + (am * 1.25757032609057) + (gear * 0.483566388425266) + (carb * -0.322101975983201)\\\"\" #> [14] \"  },\"                                                                                                                                                                                                                                                                                                                 #> [15] \"  \\\"pred_names\\\": \\\".pred\\\",\"                                                                                                                                                                                                                                                                                         #> [16] \"  \\\"version\\\": 2\"                                                                                                                                                                                                                                                                                                     #> [17] \"}\""},{"path":"https://orbital.tidymodels.org/reference/orbital_r_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn orbital object into a R function — orbital_r_fun","title":"Turn orbital object into a R function — orbital_r_fun","text":"Returns R file contains function output predictions applied data frames.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_r_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn orbital object into a R function — orbital_r_fun","text":"","code":"orbital_r_fun(x, name = \"orbital_predict\", file)"},{"path":"https://orbital.tidymodels.org/reference/orbital_r_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn orbital object into a R function — orbital_r_fun","text":"x orbital object. name Name created function. Defaults `\"orbital_predict\"“. file file name.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_r_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn orbital object into a R function — orbital_r_fun","text":"Nothing.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_r_fun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Turn orbital object into a R function — orbital_r_fun","text":"generated function expected work data frame objects. generated function require orbital package loaded. Depending models steps used, packages dplyr need loaded well.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_r_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn orbital object into a R function — orbital_r_fun","text":"","code":"library(workflows) library(recipes) library(parsnip)  rec_spec <- recipe(mpg ~ ., data = mtcars) %>%   step_normalize(all_numeric_predictors())  lm_spec <- linear_reg()  wf_spec <- workflow(rec_spec, lm_spec)  wf_fit <- fit(wf_spec, mtcars)  orbital_obj <- orbital(wf_fit)  file_name <- tempfile()  orbital_r_fun(orbital_obj, file = file_name)  readLines(file_name) #>  [1] \"orbital_predict <- function(x) {\"                                                                                                                                                                                                                                                                             #>  [2] \"with(x, {\"                                                                                                                                                                                                                                                                                                    #>  [3] \"   cyl = (cyl - 6.1875) / 1.78592164694654\"                                                                                                                                                                                                                                                                   #>  [4] \"   disp = (disp - 230.721875) / 123.938693831382\"                                                                                                                                                                                                                                                             #>  [5] \"   hp = (hp - 146.6875) / 68.5628684893206\"                                                                                                                                                                                                                                                                   #>  [6] \"   drat = (drat - 3.5965625) / 0.534678736070971\"                                                                                                                                                                                                                                                             #>  [7] \"   wt = (wt - 3.21725) / 0.978457442989697\"                                                                                                                                                                                                                                                                   #>  [8] \"   qsec = (qsec - 17.84875) / 1.78694323609684\"                                                                                                                                                                                                                                                               #>  [9] \"   vs = (vs - 0.4375) / 0.504016128774185\"                                                                                                                                                                                                                                                                    #> [10] \"   am = (am - 0.40625) / 0.498990917235846\"                                                                                                                                                                                                                                                                   #> [11] \"   gear = (gear - 3.6875) / 0.737804065256947\"                                                                                                                                                                                                                                                                #> [12] \"   carb = (carb - 2.8125) / 1.61519997763185\"                                                                                                                                                                                                                                                                 #> [13] \"   .pred = 20.090625 + (cyl * -0.199023961804221) + (disp * 1.65275221678761) + (hp * -1.47287569912409) + (drat * 0.420851499782799) + (wt * -3.63526678164088) + (qsec * 1.46715321419096) + (vs * 0.160157583474124) + (am * 1.25757032609057) + (gear * 0.483566388425266) + (carb * -0.322101975983201)\" #> [14] \"  .pred\"                                                                                                                                                                                                                                                                                                      #> [15] \"  })\"                                                                                                                                                                                                                                                                                                         #> [16] \"}\""},{"path":"https://orbital.tidymodels.org/reference/orbital_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to SQL code — orbital_sql","title":"Convert to SQL code — orbital_sql","text":"Returns SQL code equivilant prediction code.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to SQL code — orbital_sql","text":"","code":"orbital_sql(x, con)"},{"path":"https://orbital.tidymodels.org/reference/orbital_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to SQL code — orbital_sql","text":"x orbital object. con connection object.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to SQL code — orbital_sql","text":"SQL code.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_sql.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert to SQL code — orbital_sql","text":"function requires database connection object, resulting code SQL code can differ depending type database.","code":""},{"path":"https://orbital.tidymodels.org/reference/orbital_sql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to SQL code — orbital_sql","text":"","code":"library(workflows) library(recipes) library(parsnip)  rec_spec <- recipe(mpg ~ ., data = mtcars) %>%   step_normalize(all_numeric_predictors())  lm_spec <- linear_reg()  wf_spec <- workflow(rec_spec, lm_spec)  wf_fit <- fit(wf_spec, mtcars)  orbital_obj <- orbital(wf_fit)  library(dbplyr) #>  #> Attaching package: ‘dbplyr’ #> The following objects are masked from ‘package:dplyr’: #>  #>     ident, sql con <- simulate_dbi()  orbital_sql(orbital_obj, con) #> <SQL> (`cyl` - 6.1875) / 1.78592164694654 AS cyl #> <SQL> (`disp` - 230.721875) / 123.938693831382 AS disp #> <SQL> (`hp` - 146.6875) / 68.5628684893206 AS hp #> <SQL> (`drat` - 3.5965625) / 0.534678736070971 AS drat #> <SQL> (`wt` - 3.21725) / 0.978457442989697 AS wt #> <SQL> (`qsec` - 17.84875) / 1.78694323609684 AS qsec #> <SQL> (`vs` - 0.4375) / 0.504016128774185 AS vs #> <SQL> (`am` - 0.40625) / 0.498990917235846 AS am #> <SQL> (`gear` - 3.6875) / 0.737804065256947 AS gear #> <SQL> (`carb` - 2.8125) / 1.61519997763185 AS carb #> <SQL> (((((((((20.090625 + (`cyl` * -0.199023961804221)) + (`disp` * 1.65275221678761)) + (`hp` * -1.47287569912409)) + (`drat` * 0.420851499782799)) + (`wt` * -3.63526678164088)) + (`qsec` * 1.46715321419096)) + (`vs` * 0.160157583474124)) + (`am` * 1.25757032609057)) + (`gear` * 0.483566388425266)) + (`carb` * -0.322101975983201) AS .pred"},{"path":"https://orbital.tidymodels.org/reference/predict.orbital_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction using orbital objects — predict.orbital_class","title":"Prediction using orbital objects — predict.orbital_class","text":"Running prediction data frame remote database table, without needing load original packages used fit model.","code":""},{"path":"https://orbital.tidymodels.org/reference/predict.orbital_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction using orbital objects — predict.orbital_class","text":"","code":"# S3 method for class 'orbital_class' predict(object, new_data, ...)"},{"path":"https://orbital.tidymodels.org/reference/predict.orbital_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction using orbital objects — predict.orbital_class","text":"object orbital object. new_data data frame remote database table. ... currently used.","code":""},{"path":"https://orbital.tidymodels.org/reference/predict.orbital_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction using orbital objects — predict.orbital_class","text":"modified data frame remote database table.","code":""},{"path":"https://orbital.tidymodels.org/reference/predict.orbital_class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prediction using orbital objects — predict.orbital_class","text":"Using function give identical results running predict() bake() orginal object. prediction done return prediction colunms, opposed returning modified functions done orbital_inline().","code":""},{"path":"https://orbital.tidymodels.org/reference/predict.orbital_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction using orbital objects — predict.orbital_class","text":"","code":"library(workflows) library(recipes) library(parsnip)  rec_spec <- recipe(mpg ~ ., data = mtcars) %>%   step_normalize(all_numeric_predictors())  lm_spec <- linear_reg()  wf_spec <- workflow(rec_spec, lm_spec)  wf_fit <- fit(wf_spec, mtcars)  orbital_obj <- orbital(wf_fit)  predict(orbital_obj, mtcars) #>                        .pred #> Mazda RX4           22.59951 #> Mazda RX4 Wag       22.11189 #> Datsun 710          26.25064 #> Hornet 4 Drive      21.23740 #> Hornet Sportabout   17.69343 #> Valiant             20.38304 #> Duster 360          14.38626 #> Merc 240D           22.49601 #> Merc 230            24.41909 #> Merc 280            18.69903 #> Merc 280C           19.19165 #> Merc 450SE          14.17216 #> Merc 450SL          15.59957 #> Merc 450SLC         15.74222 #> Cadillac Fleetwood  12.03401 #> Lincoln Continental 10.93644 #> Chrysler Imperial   10.49363 #> Fiat 128            27.77291 #> Honda Civic         29.89674 #> Toyota Corolla      29.51237 #> Toyota Corona       23.64310 #> Dodge Challenger    16.94305 #> AMC Javelin         17.73218 #> Camaro Z28          13.30602 #> Pontiac Firebird    16.69168 #> Fiat X1-9           28.29347 #> Porsche 914-2       26.15295 #> Lotus Europa        27.63627 #> Ford Pantera L      18.87004 #> Ferrari Dino        19.69383 #> Maserati Bora       13.94112 #> Volvo 142E          24.36827"},{"path":"https://orbital.tidymodels.org/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment","code":""},{"path":"https://orbital.tidymodels.org/news/index.html","id":"orbital-030","dir":"Changelog","previous_headings":"","what":"orbital 0.3.0","title":"orbital 0.3.0","text":"CRAN release: 2024-12-22 orbital() gained type argument change prediction type. (#66) orbital() now works logistic_reg(engine = \"glm\") models class prediction probability predictions. (#62, #66) orbital() now works boost_tree(engine = \"xgboost\") models class prediction probability predictions. (#71) orbital() now works decision_tree(engine = \"partykit\") models class prediction probability predictions. (#77) augment() method orbital() object added. (#55) orbital() gained prefix argument allow renaming prediction columns. (#59)","code":""},{"path":"https://orbital.tidymodels.org/news/index.html","id":"orbital-020","dir":"Changelog","previous_headings":"","what":"orbital 0.2.0","title":"orbital 0.2.0","text":"CRAN release: 2024-07-28 Support step_dummy(), step_impute_mean(), step_impute_median(), step_impute_mode(), step_unknown(), step_novel(), step_other(), step_BoxCox(), step_inverse(), step_mutate(), step_sqrt(), step_indicate_na(), step_range(), step_intercept(), step_ratio(), step_lag(), step_log(), step_rename() added. (#17) Support step_upsample(), step_smote(), step_smotenc(), step_bsmote(), step_adasyn(), step_rose(), step_downsample(), step_nearmiss(), step_tomek() added. (#21) Support step_bin2factor(), step_discretize(), step_lencode_mixed(), step_lencode_glm(), step_lencode_bayes() added. (#22) Support step_pca_sparse(), step_pca_sparse_bayes() step_pca_truncated() added. (#23) orbital() now works tune::last_fit() objects. (#13) orbital_predict() removed replaced idiomatic predict() method. (#10)","code":""},{"path":"https://orbital.tidymodels.org/news/index.html","id":"orbital-010","dir":"Changelog","previous_headings":"","what":"orbital 0.1.0","title":"orbital 0.1.0","text":"CRAN release: 2024-07-01 Initial CRAN submission.","code":""}]
